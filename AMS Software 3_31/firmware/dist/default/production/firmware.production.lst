

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Apr 25 20:48:08 2017

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16LF1827
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     	;# 
    29  0001                     	;# 
    30  0002                     	;# 
    31  0003                     	;# 
    32  0004                     	;# 
    33  0005                     	;# 
    34  0006                     	;# 
    35  0007                     	;# 
    36  0008                     	;# 
    37  0009                     	;# 
    38  000A                     	;# 
    39  000B                     	;# 
    40  000C                     	;# 
    41  000D                     	;# 
    42  0011                     	;# 
    43  0012                     	;# 
    44  0013                     	;# 
    45  0014                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0016                     	;# 
    49  0017                     	;# 
    50  0018                     	;# 
    51  0019                     	;# 
    52  001A                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001E                     	;# 
    56  001F                     	;# 
    57  008C                     	;# 
    58  008D                     	;# 
    59  0091                     	;# 
    60  0092                     	;# 
    61  0093                     	;# 
    62  0094                     	;# 
    63  0095                     	;# 
    64  0096                     	;# 
    65  0097                     	;# 
    66  0098                     	;# 
    67  0099                     	;# 
    68  009A                     	;# 
    69  009B                     	;# 
    70  009B                     	;# 
    71  009C                     	;# 
    72  009D                     	;# 
    73  009E                     	;# 
    74  010C                     	;# 
    75  010D                     	;# 
    76  0111                     	;# 
    77  0112                     	;# 
    78  0113                     	;# 
    79  0114                     	;# 
    80  0115                     	;# 
    81  0116                     	;# 
    82  0117                     	;# 
    83  0118                     	;# 
    84  0119                     	;# 
    85  011A                     	;# 
    86  011B                     	;# 
    87  011D                     	;# 
    88  011E                     	;# 
    89  018C                     	;# 
    90  018D                     	;# 
    91  0191                     	;# 
    92  0191                     	;# 
    93  0192                     	;# 
    94  0193                     	;# 
    95  0193                     	;# 
    96  0193                     	;# 
    97  0194                     	;# 
    98  0195                     	;# 
    99  0196                     	;# 
   100  0199                     	;# 
   101  019A                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019D                     	;# 
   109  019E                     	;# 
   110  019F                     	;# 
   111  020C                     	;# 
   112  020D                     	;# 
   113  0211                     	;# 
   114  0211                     	;# 
   115  0212                     	;# 
   116  0212                     	;# 
   117  0213                     	;# 
   118  0213                     	;# 
   119  0214                     	;# 
   120  0214                     	;# 
   121  0215                     	;# 
   122  0215                     	;# 
   123  0215                     	;# 
   124  0216                     	;# 
   125  0216                     	;# 
   126  0217                     	;# 
   127  0217                     	;# 
   128  0219                     	;# 
   129  021A                     	;# 
   130  021B                     	;# 
   131  021C                     	;# 
   132  021D                     	;# 
   133  021E                     	;# 
   134  021F                     	;# 
   135  0291                     	;# 
   136  0291                     	;# 
   137  0292                     	;# 
   138  0293                     	;# 
   139  0294                     	;# 
   140  0295                     	;# 
   141  0295                     	;# 
   142  0296                     	;# 
   143  0298                     	;# 
   144  0298                     	;# 
   145  0299                     	;# 
   146  029A                     	;# 
   147  029B                     	;# 
   148  029C                     	;# 
   149  029C                     	;# 
   150  029D                     	;# 
   151  029E                     	;# 
   152  029E                     	;# 
   153  0311                     	;# 
   154  0311                     	;# 
   155  0312                     	;# 
   156  0313                     	;# 
   157  0318                     	;# 
   158  0318                     	;# 
   159  0319                     	;# 
   160  031A                     	;# 
   161  0394                     	;# 
   162  0395                     	;# 
   163  0396                     	;# 
   164  039A                     	;# 
   165  039C                     	;# 
   166  039D                     	;# 
   167  039E                     	;# 
   168  039F                     	;# 
   169  0415                     	;# 
   170  0416                     	;# 
   171  0417                     	;# 
   172  041C                     	;# 
   173  041D                     	;# 
   174  041E                     	;# 
   175  0FE4                     	;# 
   176  0FE5                     	;# 
   177  0FE6                     	;# 
   178  0FE7                     	;# 
   179  0FE8                     	;# 
   180  0FE9                     	;# 
   181  0FEA                     	;# 
   182  0FEB                     	;# 
   183  0FED                     	;# 
   184  0FEE                     	;# 
   185  0FEF                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  0011                     	;# 
   201  0012                     	;# 
   202  0013                     	;# 
   203  0014                     	;# 
   204  0015                     	;# 
   205  0016                     	;# 
   206  0016                     	;# 
   207  0017                     	;# 
   208  0018                     	;# 
   209  0019                     	;# 
   210  001A                     	;# 
   211  001B                     	;# 
   212  001C                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  008C                     	;# 
   216  008D                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0094                     	;# 
   221  0095                     	;# 
   222  0096                     	;# 
   223  0097                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009A                     	;# 
   227  009B                     	;# 
   228  009B                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  0111                     	;# 
   235  0112                     	;# 
   236  0113                     	;# 
   237  0114                     	;# 
   238  0115                     	;# 
   239  0116                     	;# 
   240  0117                     	;# 
   241  0118                     	;# 
   242  0119                     	;# 
   243  011A                     	;# 
   244  011B                     	;# 
   245  011D                     	;# 
   246  011E                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0191                     	;# 
   250  0191                     	;# 
   251  0192                     	;# 
   252  0193                     	;# 
   253  0193                     	;# 
   254  0193                     	;# 
   255  0194                     	;# 
   256  0195                     	;# 
   257  0196                     	;# 
   258  0199                     	;# 
   259  019A                     	;# 
   260  019B                     	;# 
   261  019B                     	;# 
   262  019B                     	;# 
   263  019B                     	;# 
   264  019C                     	;# 
   265  019C                     	;# 
   266  019D                     	;# 
   267  019E                     	;# 
   268  019F                     	;# 
   269  020C                     	;# 
   270  020D                     	;# 
   271  0211                     	;# 
   272  0211                     	;# 
   273  0212                     	;# 
   274  0212                     	;# 
   275  0213                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0219                     	;# 
   287  021A                     	;# 
   288  021B                     	;# 
   289  021C                     	;# 
   290  021D                     	;# 
   291  021E                     	;# 
   292  021F                     	;# 
   293  0291                     	;# 
   294  0291                     	;# 
   295  0292                     	;# 
   296  0293                     	;# 
   297  0294                     	;# 
   298  0295                     	;# 
   299  0295                     	;# 
   300  0296                     	;# 
   301  0298                     	;# 
   302  0298                     	;# 
   303  0299                     	;# 
   304  029A                     	;# 
   305  029B                     	;# 
   306  029C                     	;# 
   307  029C                     	;# 
   308  029D                     	;# 
   309  029E                     	;# 
   310  029E                     	;# 
   311  0311                     	;# 
   312  0311                     	;# 
   313  0312                     	;# 
   314  0313                     	;# 
   315  0318                     	;# 
   316  0318                     	;# 
   317  0319                     	;# 
   318  031A                     	;# 
   319  0394                     	;# 
   320  0395                     	;# 
   321  0396                     	;# 
   322  039A                     	;# 
   323  039C                     	;# 
   324  039D                     	;# 
   325  039E                     	;# 
   326  039F                     	;# 
   327  0415                     	;# 
   328  0416                     	;# 
   329  0417                     	;# 
   330  041C                     	;# 
   331  041D                     	;# 
   332  041E                     	;# 
   333  0FE4                     	;# 
   334  0FE5                     	;# 
   335  0FE6                     	;# 
   336  0FE7                     	;# 
   337  0FE8                     	;# 
   338  0FE9                     	;# 
   339  0FEA                     	;# 
   340  0FEB                     	;# 
   341  0FED                     	;# 
   342  0FEE                     	;# 
   343  0FEF                     	;# 
   344  0000                     	;# 
   345  0001                     	;# 
   346  0002                     	;# 
   347  0003                     	;# 
   348  0004                     	;# 
   349  0005                     	;# 
   350  0006                     	;# 
   351  0007                     	;# 
   352  0008                     	;# 
   353  0009                     	;# 
   354  000A                     	;# 
   355  000B                     	;# 
   356  000C                     	;# 
   357  000D                     	;# 
   358  0011                     	;# 
   359  0012                     	;# 
   360  0013                     	;# 
   361  0014                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0016                     	;# 
   365  0017                     	;# 
   366  0018                     	;# 
   367  0019                     	;# 
   368  001A                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  001E                     	;# 
   372  001F                     	;# 
   373  008C                     	;# 
   374  008D                     	;# 
   375  0091                     	;# 
   376  0092                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  010C                     	;# 
   391  010D                     	;# 
   392  0111                     	;# 
   393  0112                     	;# 
   394  0113                     	;# 
   395  0114                     	;# 
   396  0115                     	;# 
   397  0116                     	;# 
   398  0117                     	;# 
   399  0118                     	;# 
   400  0119                     	;# 
   401  011A                     	;# 
   402  011B                     	;# 
   403  011D                     	;# 
   404  011E                     	;# 
   405  018C                     	;# 
   406  018D                     	;# 
   407  0191                     	;# 
   408  0191                     	;# 
   409  0192                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0193                     	;# 
   413  0194                     	;# 
   414  0195                     	;# 
   415  0196                     	;# 
   416  0199                     	;# 
   417  019A                     	;# 
   418  019B                     	;# 
   419  019B                     	;# 
   420  019B                     	;# 
   421  019B                     	;# 
   422  019C                     	;# 
   423  019C                     	;# 
   424  019D                     	;# 
   425  019E                     	;# 
   426  019F                     	;# 
   427  020C                     	;# 
   428  020D                     	;# 
   429  0211                     	;# 
   430  0211                     	;# 
   431  0212                     	;# 
   432  0212                     	;# 
   433  0213                     	;# 
   434  0213                     	;# 
   435  0214                     	;# 
   436  0214                     	;# 
   437  0215                     	;# 
   438  0215                     	;# 
   439  0215                     	;# 
   440  0216                     	;# 
   441  0216                     	;# 
   442  0217                     	;# 
   443  0217                     	;# 
   444  0219                     	;# 
   445  021A                     	;# 
   446  021B                     	;# 
   447  021C                     	;# 
   448  021D                     	;# 
   449  021E                     	;# 
   450  021F                     	;# 
   451  0291                     	;# 
   452  0291                     	;# 
   453  0292                     	;# 
   454  0293                     	;# 
   455  0294                     	;# 
   456  0295                     	;# 
   457  0295                     	;# 
   458  0296                     	;# 
   459  0298                     	;# 
   460  0298                     	;# 
   461  0299                     	;# 
   462  029A                     	;# 
   463  029B                     	;# 
   464  029C                     	;# 
   465  029C                     	;# 
   466  029D                     	;# 
   467  029E                     	;# 
   468  029E                     	;# 
   469  0311                     	;# 
   470  0311                     	;# 
   471  0312                     	;# 
   472  0313                     	;# 
   473  0318                     	;# 
   474  0318                     	;# 
   475  0319                     	;# 
   476  031A                     	;# 
   477  0394                     	;# 
   478  0395                     	;# 
   479  0396                     	;# 
   480  039A                     	;# 
   481  039C                     	;# 
   482  039D                     	;# 
   483  039E                     	;# 
   484  039F                     	;# 
   485  0415                     	;# 
   486  0416                     	;# 
   487  0417                     	;# 
   488  041C                     	;# 
   489  041D                     	;# 
   490  041E                     	;# 
   491  0FE4                     	;# 
   492  0FE5                     	;# 
   493  0FE6                     	;# 
   494  0FE7                     	;# 
   495  0FE8                     	;# 
   496  0FE9                     	;# 
   497  0FEA                     	;# 
   498  0FEB                     	;# 
   499  0FED                     	;# 
   500  0FEE                     	;# 
   501  0FEF                     	;# 
   502  0000                     	;# 
   503  0001                     	;# 
   504  0002                     	;# 
   505  0003                     	;# 
   506  0004                     	;# 
   507  0005                     	;# 
   508  0006                     	;# 
   509  0007                     	;# 
   510  0008                     	;# 
   511  0009                     	;# 
   512  000A                     	;# 
   513  000B                     	;# 
   514  000C                     	;# 
   515  000D                     	;# 
   516  0011                     	;# 
   517  0012                     	;# 
   518  0013                     	;# 
   519  0014                     	;# 
   520  0015                     	;# 
   521  0016                     	;# 
   522  0016                     	;# 
   523  0017                     	;# 
   524  0018                     	;# 
   525  0019                     	;# 
   526  001A                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  001E                     	;# 
   530  001F                     	;# 
   531  008C                     	;# 
   532  008D                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0094                     	;# 
   537  0095                     	;# 
   538  0096                     	;# 
   539  0097                     	;# 
   540  0098                     	;# 
   541  0099                     	;# 
   542  009A                     	;# 
   543  009B                     	;# 
   544  009B                     	;# 
   545  009C                     	;# 
   546  009D                     	;# 
   547  009E                     	;# 
   548  010C                     	;# 
   549  010D                     	;# 
   550  0111                     	;# 
   551  0112                     	;# 
   552  0113                     	;# 
   553  0114                     	;# 
   554  0115                     	;# 
   555  0116                     	;# 
   556  0117                     	;# 
   557  0118                     	;# 
   558  0119                     	;# 
   559  011A                     	;# 
   560  011B                     	;# 
   561  011D                     	;# 
   562  011E                     	;# 
   563  018C                     	;# 
   564  018D                     	;# 
   565  0191                     	;# 
   566  0191                     	;# 
   567  0192                     	;# 
   568  0193                     	;# 
   569  0193                     	;# 
   570  0193                     	;# 
   571  0194                     	;# 
   572  0195                     	;# 
   573  0196                     	;# 
   574  0199                     	;# 
   575  019A                     	;# 
   576  019B                     	;# 
   577  019B                     	;# 
   578  019B                     	;# 
   579  019B                     	;# 
   580  019C                     	;# 
   581  019C                     	;# 
   582  019D                     	;# 
   583  019E                     	;# 
   584  019F                     	;# 
   585  020C                     	;# 
   586  020D                     	;# 
   587  0211                     	;# 
   588  0211                     	;# 
   589  0212                     	;# 
   590  0212                     	;# 
   591  0213                     	;# 
   592  0213                     	;# 
   593  0214                     	;# 
   594  0214                     	;# 
   595  0215                     	;# 
   596  0215                     	;# 
   597  0215                     	;# 
   598  0216                     	;# 
   599  0216                     	;# 
   600  0217                     	;# 
   601  0217                     	;# 
   602  0219                     	;# 
   603  021A                     	;# 
   604  021B                     	;# 
   605  021C                     	;# 
   606  021D                     	;# 
   607  021E                     	;# 
   608  021F                     	;# 
   609  0291                     	;# 
   610  0291                     	;# 
   611  0292                     	;# 
   612  0293                     	;# 
   613  0294                     	;# 
   614  0295                     	;# 
   615  0295                     	;# 
   616  0296                     	;# 
   617  0298                     	;# 
   618  0298                     	;# 
   619  0299                     	;# 
   620  029A                     	;# 
   621  029B                     	;# 
   622  029C                     	;# 
   623  029C                     	;# 
   624  029D                     	;# 
   625  029E                     	;# 
   626  029E                     	;# 
   627  0311                     	;# 
   628  0311                     	;# 
   629  0312                     	;# 
   630  0313                     	;# 
   631  0318                     	;# 
   632  0318                     	;# 
   633  0319                     	;# 
   634  031A                     	;# 
   635  0394                     	;# 
   636  0395                     	;# 
   637  0396                     	;# 
   638  039A                     	;# 
   639  039C                     	;# 
   640  039D                     	;# 
   641  039E                     	;# 
   642  039F                     	;# 
   643  0415                     	;# 
   644  0416                     	;# 
   645  0417                     	;# 
   646  041C                     	;# 
   647  041D                     	;# 
   648  041E                     	;# 
   649  0FE4                     	;# 
   650  0FE5                     	;# 
   651  0FE6                     	;# 
   652  0FE7                     	;# 
   653  0FE8                     	;# 
   654  0FE9                     	;# 
   655  0FEA                     	;# 
   656  0FEB                     	;# 
   657  0FED                     	;# 
   658  0FEE                     	;# 
   659  0FEF                     	;# 
   660  0000                     	;# 
   661  0001                     	;# 
   662  0002                     	;# 
   663  0003                     	;# 
   664  0004                     	;# 
   665  0005                     	;# 
   666  0006                     	;# 
   667  0007                     	;# 
   668  0008                     	;# 
   669  0009                     	;# 
   670  000A                     	;# 
   671  000B                     	;# 
   672  000C                     	;# 
   673  000D                     	;# 
   674  0011                     	;# 
   675  0012                     	;# 
   676  0013                     	;# 
   677  0014                     	;# 
   678  0015                     	;# 
   679  0016                     	;# 
   680  0016                     	;# 
   681  0017                     	;# 
   682  0018                     	;# 
   683  0019                     	;# 
   684  001A                     	;# 
   685  001B                     	;# 
   686  001C                     	;# 
   687  001E                     	;# 
   688  001F                     	;# 
   689  008C                     	;# 
   690  008D                     	;# 
   691  0091                     	;# 
   692  0092                     	;# 
   693  0093                     	;# 
   694  0094                     	;# 
   695  0095                     	;# 
   696  0096                     	;# 
   697  0097                     	;# 
   698  0098                     	;# 
   699  0099                     	;# 
   700  009A                     	;# 
   701  009B                     	;# 
   702  009B                     	;# 
   703  009C                     	;# 
   704  009D                     	;# 
   705  009E                     	;# 
   706  010C                     	;# 
   707  010D                     	;# 
   708  0111                     	;# 
   709  0112                     	;# 
   710  0113                     	;# 
   711  0114                     	;# 
   712  0115                     	;# 
   713  0116                     	;# 
   714  0117                     	;# 
   715  0118                     	;# 
   716  0119                     	;# 
   717  011A                     	;# 
   718  011B                     	;# 
   719  011D                     	;# 
   720  011E                     	;# 
   721  018C                     	;# 
   722  018D                     	;# 
   723  0191                     	;# 
   724  0191                     	;# 
   725  0192                     	;# 
   726  0193                     	;# 
   727  0193                     	;# 
   728  0193                     	;# 
   729  0194                     	;# 
   730  0195                     	;# 
   731  0196                     	;# 
   732  0199                     	;# 
   733  019A                     	;# 
   734  019B                     	;# 
   735  019B                     	;# 
   736  019B                     	;# 
   737  019B                     	;# 
   738  019C                     	;# 
   739  019C                     	;# 
   740  019D                     	;# 
   741  019E                     	;# 
   742  019F                     	;# 
   743  020C                     	;# 
   744  020D                     	;# 
   745  0211                     	;# 
   746  0211                     	;# 
   747  0212                     	;# 
   748  0212                     	;# 
   749  0213                     	;# 
   750  0213                     	;# 
   751  0214                     	;# 
   752  0214                     	;# 
   753  0215                     	;# 
   754  0215                     	;# 
   755  0215                     	;# 
   756  0216                     	;# 
   757  0216                     	;# 
   758  0217                     	;# 
   759  0217                     	;# 
   760  0219                     	;# 
   761  021A                     	;# 
   762  021B                     	;# 
   763  021C                     	;# 
   764  021D                     	;# 
   765  021E                     	;# 
   766  021F                     	;# 
   767  0291                     	;# 
   768  0291                     	;# 
   769  0292                     	;# 
   770  0293                     	;# 
   771  0294                     	;# 
   772  0295                     	;# 
   773  0295                     	;# 
   774  0296                     	;# 
   775  0298                     	;# 
   776  0298                     	;# 
   777  0299                     	;# 
   778  029A                     	;# 
   779  029B                     	;# 
   780  029C                     	;# 
   781  029C                     	;# 
   782  029D                     	;# 
   783  029E                     	;# 
   784  029E                     	;# 
   785  0311                     	;# 
   786  0311                     	;# 
   787  0312                     	;# 
   788  0313                     	;# 
   789  0318                     	;# 
   790  0318                     	;# 
   791  0319                     	;# 
   792  031A                     	;# 
   793  0394                     	;# 
   794  0395                     	;# 
   795  0396                     	;# 
   796  039A                     	;# 
   797  039C                     	;# 
   798  039D                     	;# 
   799  039E                     	;# 
   800  039F                     	;# 
   801  0415                     	;# 
   802  0416                     	;# 
   803  0417                     	;# 
   804  041C                     	;# 
   805  041D                     	;# 
   806  041E                     	;# 
   807  0FE4                     	;# 
   808  0FE5                     	;# 
   809  0FE6                     	;# 
   810  0FE7                     	;# 
   811  0FE8                     	;# 
   812  0FE9                     	;# 
   813  0FEA                     	;# 
   814  0FEB                     	;# 
   815  0FED                     	;# 
   816  0FEE                     	;# 
   817  0FEF                     	;# 
   818                           
   819                           	psect	nvBANK0
   820  004D                     __pnvBANK0:	
   821  004D                     _i2c_address:	
   822  004D                     	ds	1
   823  000B                     _INTCONbits	set	11
   824  0011                     _PIR1bits	set	17
   825  009D                     _ADCON0bits	set	157
   826  009E                     _ADCON1bits	set	158
   827  009C                     _ADRESH	set	156
   828  009B                     _ADRESL	set	155
   829  0091                     _PIE1bits	set	145
   830  008C                     _TRISA	set	140
   831  008D                     _TRISB	set	141
   832  0097                     _WDTCONbits	set	151
   833  0117                     _FVRCONbits	set	279
   834  010C                     _LATA	set	268
   835  010C                     _LATAbits	set	268
   836  010D                     _LATB	set	269
   837  010D                     _LATBbits	set	269
   838  0191                     _EEADR	set	401
   839  018D                     _ANSELB	set	397
   840  0195                     _EECON1bits	set	405
   841  0196                     _EECON2	set	406
   842  0193                     _EEDATA	set	403
   843  0212                     _SSP1ADD	set	530
   844  0211                     _SSP1BUF	set	529
   845  0215                     _SSP1CON1bits	set	533
   846  0216                     _SSP1CON2bits	set	534
   847  0213                     _SSP1MSK	set	531
   848  0214                     _SSP1STATbits	set	532
   849                           
   850                           ; #config settings
   851  0000                     
   852                           	psect	cinit
   853  001E                     start_initialization:	
   854  001E                     __initialization:	
   855                           
   856                           ; Clear objects allocated to COMMON
   857  001E  01FD               	clrf	__pbssCOMMON& (0+127)
   858                           
   859                           ; Clear objects allocated to BANK0
   860  001F  3020               	movlw	low __pbssBANK0
   861  0020  0084               	movwf	4
   862  0021  3000               	movlw	high __pbssBANK0
   863  0022  0085               	movwf	5
   864  0023  3017               	movlw	23
   865  0024  3183  23DA         	fcall	clear_ram0
   866  0026                     end_of_initialization:	
   867                           ;End of C runtime variable initialization code
   868                           
   869  0026                     __end_of__initialization:	
   870  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   871  0027  0020               	movlb	0
   872  0028  3182  2A96         	ljmp	_main	;jump to C main() function
   873                           
   874                           	psect	bssCOMMON
   875  007D                     __pbssCOMMON:	
   876  007D                     _adc_chan:	
   877  007D                     	ds	1
   878                           
   879                           	psect	bssBANK0
   880  0020                     __pbssBANK0:	
   881  0020                     _cal_data:	
   882  0020                     	ds	4
   883  0024                     _serial:	
   884  0024                     	ds	4
   885  0028                     _bypass_count:	
   886  0028                     	ds	2
   887  002A                     _bypass_limit:	
   888  002A                     	ds	2
   889  002C                     _offset:	
   890  002C                     	ds	2
   891  002E                     _slope:	
   892  002E                     	ds	2
   893  0030                     _temp:	
   894  0030                     	ds	2
   895  0032                     _voltage:	
   896  0032                     	ds	2
   897  0034                     _bypass_flag:	
   898  0034                     	ds	1
   899  0035                     _panic_flag:	
   900  0035                     	ds	1
   901  0036                     _read_type:	
   902  0036                     	ds	1
   903                           
   904                           	psect	clrtext
   905  03DA                     clear_ram0:	
   906                           ;	Called with FSR0 containing the base address, and
   907                           ;	WREG with the size to clear
   908                           
   909  03DA  0064               	clrwdt	;clear the watchdog before getting into this loop
   910  03DB                     clrloop0:	
   911  03DB  0180               	clrf	0	;clear RAM location pointed to by FSR
   912  03DC  3101               	addfsr 0,1
   913  03DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   914  03DE  2BDB               	goto	clrloop0	;have we reached the end yet?
   915  03DF  3400               	retlw	0	;all done for this memory range, return
   916                           
   917                           	psect	cstackCOMMON
   918  0070                     __pcstackCOMMON:	
   919  0070                     ?_init_WDT:	
   920  0070                     ?_init_I2C:	
   921                           ; 0 bytes @ 0x0
   922                           
   923  0070                     ?_init_ADC:	
   924                           ; 0 bytes @ 0x0
   925                           
   926  0070                     ?_I2C_ISR:	
   927                           ; 0 bytes @ 0x0
   928                           
   929  0070                     ?_ADC_ISR:	
   930                           ; 0 bytes @ 0x0
   931                           
   932  0070                     ??_ADC_ISR:	
   933                           ; 0 bytes @ 0x0
   934                           
   935  0070                     ?_event_wdt:	
   936                           ; 0 bytes @ 0x0
   937                           
   938  0070                     ??_i2c_read:	
   939                           ; 0 bytes @ 0x0
   940                           
   941  0070                     ?_i2c_write:	
   942                           ; 0 bytes @ 0x0
   943                           
   944  0070                     ??_i2c_write:	
   945                           ; 0 bytes @ 0x0
   946                           
   947  0070                     ?_setup:	
   948                           ; 0 bytes @ 0x0
   949                           
   950  0070                     ?_ISR:	
   951                           ; 0 bytes @ 0x0
   952                           
   953  0070                     ?i1_init_I2C:	
   954                           ; 0 bytes @ 0x0
   955                           
   956  0070                     ??i1_init_I2C:	
   957                           ; 0 bytes @ 0x0
   958                           
   959  0070                     ??i1_read_eeprom:	
   960                           ; 0 bytes @ 0x0
   961                           
   962  0070                     ?_read_eeprom:	
   963                           ; 0 bytes @ 0x0
   964                           
   965  0070                     ?_i2c_read:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0070                     ?i1_read_eeprom:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0070                     ?_main:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0070                     i2c_write@byte:	
   975                           ; 2 bytes @ 0x0
   976                           
   977                           
   978                           ; 1 bytes @ 0x0
   979  0070                     	ds	1
   980  0071                     i2c_read@byte:	
   981  0071                     i1init_I2C@addr:	
   982                           ; 1 bytes @ 0x1
   983                           
   984                           
   985                           ; 1 bytes @ 0x1
   986  0071                     	ds	1
   987  0072                     i1read_eeprom@address:	
   988                           
   989                           ; 1 bytes @ 0x2
   990  0072                     	ds	1
   991  0073                     ?i1_write_eeprom:	
   992  0073                     i1write_eeprom@data:	
   993                           ; 1 bytes @ 0x3
   994                           
   995                           
   996                           ; 1 bytes @ 0x3
   997  0073                     	ds	1
   998  0074                     ??i1_write_eeprom:	
   999                           
  1000                           ; 0 bytes @ 0x4
  1001  0074                     	ds	2
  1002  0076                     i1write_eeprom@address:	
  1003                           
  1004                           ; 1 bytes @ 0x6
  1005  0076                     	ds	1
  1006  0077                     ??_I2C_ISR:	
  1007                           
  1008                           ; 0 bytes @ 0x7
  1009  0077                     	ds	5
  1010  007C                     ??_ISR:	
  1011                           
  1012                           ; 0 bytes @ 0xC
  1013  007C                     	ds	1
  1014                           
  1015                           	psect	cstackBANK0
  1016  0037                     __pcstackBANK0:	
  1017  0037                     I2C_ISR@cmd:	
  1018                           
  1019                           ; 1 bytes @ 0x0
  1020  0037                     	ds	1
  1021  0038                     I2C_ISR@high_byte:	
  1022                           
  1023                           ; 1 bytes @ 0x1
  1024  0038                     	ds	1
  1025  0039                     I2C_ISR@low_byte:	
  1026                           
  1027                           ; 1 bytes @ 0x2
  1028  0039                     	ds	1
  1029  003A                     ??_read_eeprom:	
  1030  003A                     ??_init_WDT:	
  1031                           ; 0 bytes @ 0x3
  1032                           
  1033  003A                     ??_init_I2C:	
  1034                           ; 0 bytes @ 0x3
  1035                           
  1036  003A                     ??_init_ADC:	
  1037                           ; 0 bytes @ 0x3
  1038                           
  1039  003A                     ??_event_wdt:	
  1040                           ; 0 bytes @ 0x3
  1041                           
  1042                           
  1043                           ; 0 bytes @ 0x3
  1044  003A                     	ds	1
  1045  003B                     init_I2C@addr:	
  1046                           
  1047                           ; 1 bytes @ 0x4
  1048  003B                     	ds	1
  1049  003C                     read_eeprom@address:	
  1050                           
  1051                           ; 1 bytes @ 0x5
  1052  003C                     	ds	1
  1053  003D                     ?_write_eeprom:	
  1054  003D                     write_eeprom@data:	
  1055                           ; 1 bytes @ 0x6
  1056                           
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059  003D                     	ds	1
  1060  003E                     ??_write_eeprom:	
  1061                           
  1062                           ; 0 bytes @ 0x7
  1063  003E                     	ds	2
  1064  0040                     write_eeprom@address:	
  1065                           
  1066                           ; 1 bytes @ 0x9
  1067  0040                     	ds	1
  1068  0041                     ??_setup:	
  1069                           
  1070                           ; 0 bytes @ 0xA
  1071  0041                     	ds	5
  1072  0046                     ??_main:	
  1073                           
  1074                           ; 0 bytes @ 0xF
  1075  0046                     	ds	2
  1076  0048                     _main$186:	
  1077                           
  1078                           ; 2 bytes @ 0x11
  1079  0048                     	ds	2
  1080  004A                     _main$203:	
  1081                           
  1082                           ; 2 bytes @ 0x13
  1083  004A                     	ds	2
  1084  004C                     main@panic_led:	
  1085                           
  1086                           ; 1 bytes @ 0x15
  1087  004C                     	ds	1
  1088                           
  1089                           	psect	maintext
  1090  0296                     __pmaintext:	
  1091 ;;
  1092 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1093 ;;
  1094 ;; *************** function _main *****************
  1095 ;; Defined at:
  1096 ;;		line 133 in file "firmware.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  panic_led       1   21[BANK0 ] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  2   68[None  ] int 
  1103 ;; Registers used:
  1104 ;;		wreg, status,2, status,0, pclath, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : B1F/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1110 ;;      Params:         0       0       0       0       0       0
  1111 ;;      Locals:         0       5       0       0       0       0
  1112 ;;      Temps:          0       2       0       0       0       0
  1113 ;;      Totals:         0       7       0       0       0       0
  1114 ;;Total ram usage:        7 bytes
  1115 ;; Hardware stack levels required when called:    7
  1116 ;; This function calls:
  1117 ;;		_event_wdt
  1118 ;;		_setup
  1119 ;; This function is called by:
  1120 ;;		Startup code after reset
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           
  1125                           ;psect for function _main
  1126  0296                     _main:	
  1127                           
  1128                           ;firmware.c: 140: setup();
  1129                           
  1130                           ;incstack = 0
  1131                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1132  0296  3181  21DC  3182   	fcall	_setup
  1133                           
  1134                           ;firmware.c: 143: INTCONbits.PEIE = 1;
  1135  0299  170B               	bsf	11,6	;volatile
  1136                           
  1137                           ;firmware.c: 144: INTCONbits.GIE = 1;
  1138  029A  178B               	bsf	11,7	;volatile
  1139                           
  1140                           ;firmware.c: 147: bool panic_led = 0;
  1141  029B  0020               	movlb	0	; select bank0
  1142  029C  01CC               	clrf	main@panic_led
  1143  029D                     l69:	
  1144                           ;firmware.c: 150: while(1) {
  1145                           
  1146  029D  0063               	sleep	;# 
  1147                           
  1148                           ;firmware.c: 155: event_wdt();
  1149  029E  3183  2373  3182   	fcall	_event_wdt
  1150                           
  1151                           ;firmware.c: 168: panic_led = (panic_flag) ? ~panic_led : 0;
  1152  02A1  0020               	movlb	0	; select bank0
  1153  02A2  0835               	movf	_panic_flag,w	;volatile
  1154  02A3  1D03               	btfss	3,2
  1155  02A4  2AA8               	goto	l1407
  1156  02A5  01C8               	clrf	_main$186
  1157  02A6  01C9               	clrf	_main$186+1
  1158  02A7  2AAF               	goto	l1409
  1159  02A8                     l1407:	
  1160  02A8  084C               	movf	main@panic_led,w
  1161  02A9  00C6               	movwf	??_main
  1162  02AA  01C7               	clrf	??_main+1
  1163  02AB  0946               	comf	??_main,w
  1164  02AC  00C8               	movwf	_main$186
  1165  02AD  0947               	comf	??_main+1,w
  1166  02AE  00C9               	movwf	_main$186+1
  1167  02AF                     l1409:	
  1168  02AF  0848               	movf	_main$186,w
  1169  02B0  00C6               	movwf	??_main
  1170  02B1  0846               	movf	??_main,w
  1171  02B2  00CC               	movwf	main@panic_led
  1172                           
  1173                           ;firmware.c: 169: LATBbits.LATB0 = bypass_flag;
  1174  02B3  0834               	movf	_bypass_flag,w	;volatile
  1175  02B4  0022               	movlb	2	; select bank2
  1176  02B5  1D03               	skipz
  1177  02B6  140D               	bsf	13,0	;volatile
  1178  02B7  1903               	skipnz
  1179  02B8  100D               	bcf	13,0	;volatile
  1180                           
  1181                           ;firmware.c: 170: LATAbits.LATA6 = (panic_flag) ? panic_led : 0;
  1182  02B9  0020               	movlb	0	; select bank0
  1183  02BA  0835               	movf	_panic_flag,w	;volatile
  1184  02BB  1D03               	btfss	3,2
  1185  02BC  2AC0               	goto	l1415
  1186  02BD  01CA               	clrf	_main$203
  1187  02BE  01CB               	clrf	_main$203+1
  1188  02BF  2AC7               	goto	l77
  1189  02C0                     l1415:	
  1190  02C0  084C               	movf	main@panic_led,w
  1191  02C1  00C6               	movwf	??_main
  1192  02C2  01C7               	clrf	??_main+1
  1193  02C3  0846               	movf	??_main,w
  1194  02C4  00CA               	movwf	_main$203
  1195  02C5  0847               	movf	??_main+1,w
  1196  02C6  00CB               	movwf	_main$203+1
  1197  02C7                     l77:	
  1198  02C7  084A               	movf	_main$203,w
  1199  02C8  0022               	movlb	2	; select bank2
  1200  02C9  1D03               	skipz
  1201  02CA  170C               	bsf	12,6	;volatile
  1202  02CB  1903               	skipnz
  1203  02CC  130C               	bcf	12,6	;volatile
  1204  02CD  2A9D               	goto	l69
  1205  02CE                     __end_of_main:	
  1206                           ;firmware.c: 171: }
  1207                           ;firmware.c: 173: return 0;
  1208                           ;	Return value of _main is never used
  1209                           
  1210                           
  1211                           	psect	text1
  1212  01DC                     __ptext1:	
  1213 ;; *************** function _setup *****************
  1214 ;; Defined at:
  1215 ;;		line 46 in file "firmware.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;		None               void
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1229 ;;      Params:         0       0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0       0
  1231 ;;      Temps:          0       5       0       0       0       0
  1232 ;;      Totals:         0       5       0       0       0       0
  1233 ;;Total ram usage:        5 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    6
  1236 ;; This function calls:
  1237 ;;		_init_ADC
  1238 ;;		_init_I2C
  1239 ;;		_init_WDT
  1240 ;;		_read_eeprom
  1241 ;;		_write_eeprom
  1242 ;; This function is called by:
  1243 ;;		_main
  1244 ;; This function uses a non-reentrant model
  1245 ;;
  1246                           
  1247                           
  1248                           ;psect for function _setup
  1249  01DC                     _setup:	
  1250                           
  1251                           ;firmware.c: 48: LATA = 0x00;
  1252                           
  1253                           ;incstack = 0
  1254                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1255  01DC  0022               	movlb	2	; select bank2
  1256  01DD  018C               	clrf	12	;volatile
  1257                           
  1258                           ;firmware.c: 49: LATB = 0x00;
  1259  01DE  018D               	clrf	13	;volatile
  1260                           
  1261                           ;firmware.c: 52: TRISA = (1 << 5);
  1262  01DF  3020               	movlw	32
  1263  01E0  0021               	movlb	1	; select bank1
  1264  01E1  008C               	movwf	12	;volatile
  1265                           
  1266                           ;firmware.c: 53: TRISB = (1 << 1) |
  1267                           ;firmware.c: 54: (1 << 2) |
  1268                           ;firmware.c: 55: (1 << 3) |
  1269                           ;firmware.c: 56: (1 << 4);
  1270  01E2  301E               	movlw	30
  1271  01E3  008D               	movwf	13	;volatile
  1272                           
  1273                           ;firmware.c: 60: ANSELB = (1 << 2) |
  1274                           ;firmware.c: 61: (1 << 3);
  1275  01E4  300C               	movlw	12
  1276  01E5  0023               	movlb	3	; select bank3
  1277  01E6  008D               	movwf	13	;volatile
  1278                           
  1279                           ;firmware.c: 65: i2c_address = read_eeprom(1);
  1280  01E7  3001               	movlw	1
  1281  01E8  3183  238C  3181   	fcall	_read_eeprom
  1282  01EB  0020               	movlb	0	; select bank0
  1283  01EC  00C1               	movwf	??_setup
  1284  01ED  0841               	movf	??_setup,w
  1285  01EE  00CD               	movwf	_i2c_address	;volatile
  1286                           
  1287                           ;firmware.c: 67: if((i2c_address == 0x00) || (i2c_address == 0xFF)) {
  1288  01EF  084D               	movf	_i2c_address,w	;volatile
  1289  01F0  1D03               	btfss	3,2
  1290  01F1  0A4D               	incf	_i2c_address,w	;volatile
  1291  01F2  1D03               	btfss	3,2
  1292  01F3  2A04               	goto	l1217
  1293                           
  1294                           ;firmware.c: 68: write_eeprom(1, (0x04 << 2));
  1295  01F4  3010               	movlw	16
  1296  01F5  00C1               	movwf	??_setup
  1297  01F6  0841               	movf	??_setup,w
  1298  01F7  00BD               	movwf	write_eeprom@data
  1299  01F8  3001               	movlw	1
  1300  01F9  3182  22F9  3181   	fcall	_write_eeprom
  1301                           
  1302                           ;firmware.c: 69: i2c_address = read_eeprom(1);
  1303  01FC  3001               	movlw	1
  1304  01FD  3183  238C  3181   	fcall	_read_eeprom
  1305  0200  0020               	movlb	0	; select bank0
  1306  0201  00C1               	movwf	??_setup
  1307  0202  0841               	movf	??_setup,w
  1308  0203  00CD               	movwf	_i2c_address	;volatile
  1309  0204                     l1217:	
  1310                           
  1311                           ;firmware.c: 70: }
  1312                           ;firmware.c: 73: bypass_limit =
  1313                           ;firmware.c: 74: (read_eeprom(2) << 8) |
  1314                           ;firmware.c: 75: (read_eeprom(2 + 1));
  1315  0204  3003               	movlw	3
  1316  0205  3183  238C  3181   	fcall	_read_eeprom
  1317  0208  0020               	movlb	0	; select bank0
  1318  0209  00C1               	movwf	??_setup
  1319  020A  01C2               	clrf	??_setup+1
  1320  020B  3002               	movlw	2
  1321  020C  3183  238C  3181   	fcall	_read_eeprom
  1322  020F  0020               	movlb	0	; select bank0
  1323  0210  00C3               	movwf	??_setup+2
  1324  0211  01C4               	clrf	??_setup+3
  1325  0212  0843               	movf	??_setup+2,w
  1326  0213  00C4               	movwf	??_setup+3
  1327  0214  01C3               	clrf	??_setup+2
  1328  0215  0841               	movf	??_setup,w
  1329  0216  0443               	iorwf	??_setup+2,w
  1330  0217  00AA               	movwf	_bypass_limit	;volatile
  1331  0218  0842               	movf	??_setup+1,w
  1332  0219  0444               	iorwf	??_setup+3,w
  1333  021A  00AB               	movwf	_bypass_limit+1	;volatile
  1334                           
  1335                           ;firmware.c: 76: if((bypass_limit == 0x00) || (bypass_limit == 0xFF)) {
  1336  021B  082A               	movf	_bypass_limit,w	;volatile
  1337  021C  042B               	iorwf	_bypass_limit+1,w	;volatile
  1338  021D  1903               	btfsc	3,2
  1339  021E  2A23               	goto	l1223
  1340  021F  0A2A               	incf	_bypass_limit,w	;volatile
  1341  0220  042B               	iorwf	_bypass_limit+1,w	;volatile
  1342  0221  1D03               	btfss	3,2
  1343  0222  2A42               	goto	l1227
  1344  0223                     l1223:	
  1345                           
  1346                           ;firmware.c: 77: write_eeprom(1, 0x00FF);
  1347  0223  30FF               	movlw	255
  1348  0224  00C1               	movwf	??_setup
  1349  0225  0841               	movf	??_setup,w
  1350  0226  00BD               	movwf	write_eeprom@data
  1351  0227  3001               	movlw	1
  1352  0228  3182  22F9  3181   	fcall	_write_eeprom
  1353                           
  1354                           ;firmware.c: 78: bypass_limit =
  1355                           ;firmware.c: 79: (read_eeprom(2) << 8) |
  1356                           ;firmware.c: 80: (read_eeprom(2 + 1));
  1357  022B  3003               	movlw	3
  1358  022C  3183  238C  3181   	fcall	_read_eeprom
  1359  022F  0020               	movlb	0	; select bank0
  1360  0230  00C1               	movwf	??_setup
  1361  0231  01C2               	clrf	??_setup+1
  1362  0232  3002               	movlw	2
  1363  0233  3183  238C  3181   	fcall	_read_eeprom
  1364  0236  0020               	movlb	0	; select bank0
  1365  0237  00C3               	movwf	??_setup+2
  1366  0238  01C4               	clrf	??_setup+3
  1367  0239  0843               	movf	??_setup+2,w
  1368  023A  00C4               	movwf	??_setup+3
  1369  023B  01C3               	clrf	??_setup+2
  1370  023C  0841               	movf	??_setup,w
  1371  023D  0443               	iorwf	??_setup+2,w
  1372  023E  00AA               	movwf	_bypass_limit	;volatile
  1373  023F  0842               	movf	??_setup+1,w
  1374  0240  0444               	iorwf	??_setup+3,w
  1375  0241  00AB               	movwf	_bypass_limit+1	;volatile
  1376  0242                     l1227:	
  1377                           
  1378                           ;firmware.c: 81: }
  1379                           ;firmware.c: 84: serial[3] = read_eeprom(8);
  1380  0242  3008               	movlw	8
  1381  0243  3183  238C  3181   	fcall	_read_eeprom
  1382  0246  0020               	movlb	0	; select bank0
  1383  0247  00C1               	movwf	??_setup
  1384  0248  0841               	movf	??_setup,w
  1385  0249  00A7               	movwf	_serial+3	;volatile
  1386                           
  1387                           ;firmware.c: 85: serial[2] = read_eeprom(8 + 1);
  1388  024A  3009               	movlw	9
  1389  024B  3183  238C  3181   	fcall	_read_eeprom
  1390  024E  0020               	movlb	0	; select bank0
  1391  024F  00C1               	movwf	??_setup
  1392  0250  0841               	movf	??_setup,w
  1393  0251  00A6               	movwf	_serial+2	;volatile
  1394                           
  1395                           ;firmware.c: 86: serial[1] = read_eeprom(8 + 2);
  1396  0252  300A               	movlw	10
  1397  0253  3183  238C  3181   	fcall	_read_eeprom
  1398  0256  0020               	movlb	0	; select bank0
  1399  0257  00C1               	movwf	??_setup
  1400  0258  0841               	movf	??_setup,w
  1401  0259  00A5               	movwf	_serial+1	;volatile
  1402                           
  1403                           ;firmware.c: 87: serial[0] = read_eeprom(8 + 3);
  1404  025A  300B               	movlw	11
  1405  025B  3183  238C  3181   	fcall	_read_eeprom
  1406  025E  0020               	movlb	0	; select bank0
  1407  025F  00C1               	movwf	??_setup
  1408  0260  0841               	movf	??_setup,w
  1409  0261  00A4               	movwf	_serial	;volatile
  1410                           
  1411                           ;firmware.c: 90: cal_data[3] = read_eeprom(4);
  1412  0262  3004               	movlw	4
  1413  0263  3183  238C  3181   	fcall	_read_eeprom
  1414  0266  0020               	movlb	0	; select bank0
  1415  0267  00C1               	movwf	??_setup
  1416  0268  0841               	movf	??_setup,w
  1417  0269  00A3               	movwf	_cal_data+3	;volatile
  1418                           
  1419                           ;firmware.c: 91: cal_data[2] = read_eeprom(4 + 1);
  1420  026A  3005               	movlw	5
  1421  026B  3183  238C  3181   	fcall	_read_eeprom
  1422  026E  0020               	movlb	0	; select bank0
  1423  026F  00C1               	movwf	??_setup
  1424  0270  0841               	movf	??_setup,w
  1425  0271  00A2               	movwf	_cal_data+2	;volatile
  1426                           
  1427                           ;firmware.c: 92: cal_data[1] = read_eeprom(4 + 2);
  1428  0272  3006               	movlw	6
  1429  0273  3183  238C  3181   	fcall	_read_eeprom
  1430  0276  0020               	movlb	0	; select bank0
  1431  0277  00C1               	movwf	??_setup
  1432  0278  0841               	movf	??_setup,w
  1433  0279  00A1               	movwf	_cal_data+1	;volatile
  1434                           
  1435                           ;firmware.c: 93: cal_data[0] = read_eeprom(4 + 3);
  1436  027A  3007               	movlw	7
  1437  027B  3183  238C  3181   	fcall	_read_eeprom
  1438  027E  0020               	movlb	0	; select bank0
  1439  027F  00C1               	movwf	??_setup
  1440  0280  0841               	movf	??_setup,w
  1441  0281  00A0               	movwf	_cal_data	;volatile
  1442                           
  1443                           ;firmware.c: 95: slope = (cal_data[3] << 8) | cal_data[2];
  1444  0282  0823               	movf	_cal_data+3,w	;volatile
  1445  0283  00AF               	movwf	_slope+1	;volatile
  1446  0284  0822               	movf	_cal_data+2,w	;volatile
  1447  0285  00AE               	movwf	_slope	;volatile
  1448                           
  1449                           ;firmware.c: 96: offset = (cal_data[1] << 8) | cal_data[0];
  1450  0286  0821               	movf	_cal_data+1,w	;volatile
  1451  0287  00AD               	movwf	_offset+1	;volatile
  1452  0288  0820               	movf	_cal_data,w	;volatile
  1453  0289  00AC               	movwf	_offset	;volatile
  1454                           
  1455                           ;firmware.c: 99: read_type = 0x00;
  1456  028A  01B6               	clrf	_read_type	;volatile
  1457                           
  1458                           ;firmware.c: 102: init_WDT();
  1459  028B  3183  23D3  3181   	fcall	_init_WDT
  1460                           
  1461                           ;firmware.c: 105: init_I2C(i2c_address);
  1462  028E  0020               	movlb	0	; select bank0
  1463  028F  084D               	movf	_i2c_address,w	;volatile
  1464  0290  3183  231D  3181   	fcall	_init_I2C
  1465                           
  1466                           ;firmware.c: 108: init_ADC();
  1467  0293  3183  239D         	fcall	_init_ADC
  1468  0295  0008               	return
  1469  0296                     __end_of_setup:	
  1470                           
  1471                           	psect	text2
  1472  02F9                     __ptext2:	
  1473 ;; *************** function _write_eeprom *****************
  1474 ;; Defined at:
  1475 ;;		line 25 in file "eeprom.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;  address         1    wreg     unsigned char 
  1478 ;;  data            1    6[BANK0 ] unsigned char 
  1479 ;; Auto vars:     Size  Location     Type
  1480 ;;  address         1    9[BANK0 ] unsigned char 
  1481 ;; Return value:  Size  Location     Type
  1482 ;;                  1    wreg      unsigned char 
  1483 ;; Registers used:
  1484 ;;		wreg, status,2, status,0, pclath, cstack
  1485 ;; Tracked objects:
  1486 ;;		On entry : 0/0
  1487 ;;		On exit  : 0/0
  1488 ;;		Unchanged: 0/0
  1489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1490 ;;      Params:         0       1       0       0       0       0
  1491 ;;      Locals:         0       1       0       0       0       0
  1492 ;;      Temps:          0       2       0       0       0       0
  1493 ;;      Totals:         0       4       0       0       0       0
  1494 ;;Total ram usage:        4 bytes
  1495 ;; Hardware stack levels used:    1
  1496 ;; Hardware stack levels required when called:    5
  1497 ;; This function calls:
  1498 ;;		_read_eeprom
  1499 ;; This function is called by:
  1500 ;;		_setup
  1501 ;; This function uses a non-reentrant model
  1502 ;;
  1503                           
  1504                           
  1505                           ;psect for function _write_eeprom
  1506  02F9                     _write_eeprom:	
  1507                           
  1508                           ;incstack = 0
  1509                           ; Regs used in _write_eeprom: [wreg+status,2+status,0+pclath+cstack]
  1510                           ;write_eeprom@address stored from wreg
  1511  02F9  0020               	movlb	0	; select bank0
  1512  02FA  00C0               	movwf	write_eeprom@address
  1513                           
  1514                           ;eeprom.c: 26: EECON1bits.WREN=1;
  1515  02FB  0023               	movlb	3	; select bank3
  1516  02FC  1515               	bsf	21,2	;volsfr
  1517                           
  1518                           ;eeprom.c: 27: EEADR=address;
  1519  02FD  0020               	movlb	0	; select bank0
  1520  02FE  0840               	movf	write_eeprom@address,w
  1521  02FF  00BE               	movwf	??_write_eeprom
  1522  0300  01BF               	clrf	??_write_eeprom+1
  1523  0301  083E               	movf	??_write_eeprom,w
  1524  0302  0023               	movlb	3	; select bank3
  1525  0303  0091               	movwf	17	;volatile
  1526  0304  0020               	movlb	0	; select bank0
  1527  0305  083F               	movf	??_write_eeprom+1,w
  1528  0306  0023               	movlb	3	; select bank3
  1529  0307  0092               	movwf	18	;volatile
  1530                           
  1531                           ;eeprom.c: 28: EEDATA=data;
  1532  0308  0020               	movlb	0	; select bank0
  1533  0309  083D               	movf	write_eeprom@data,w
  1534  030A  0023               	movlb	3	; select bank3
  1535  030B  0093               	movwf	19	;volatile
  1536                           
  1537                           ;eeprom.c: 29: EECON1bits.EEPGD=0;
  1538  030C  1395               	bcf	21,7	;volsfr
  1539                           
  1540                           ;eeprom.c: 30: EECON1bits.CFGS=0;
  1541  030D  1315               	bcf	21,6	;volsfr
  1542                           
  1543                           ;eeprom.c: 31: INTCONbits.GIE=0;
  1544  030E  138B               	bcf	11,7	;volatile
  1545                           
  1546                           ;eeprom.c: 33: EECON2=0x55;
  1547  030F  3055               	movlw	85
  1548  0310  0096               	movwf	22	;volsfr
  1549                           
  1550                           ;eeprom.c: 34: EECON2=0xAA;
  1551  0311  30AA               	movlw	170
  1552  0312  0096               	movwf	22	;volsfr
  1553                           
  1554                           ;eeprom.c: 35: EECON1bits.WR=1;
  1555  0313  1495               	bsf	21,1	;volsfr
  1556                           
  1557                           ;eeprom.c: 37: INTCONbits.GIE=1;
  1558  0314  178B               	bsf	11,7	;volatile
  1559  0315                     l249:	
  1560                           ;eeprom.c: 38: while (EECON1bits.WR==1);
  1561                           
  1562  0315  1895               	btfsc	21,1	;volsfr
  1563  0316  2B15               	goto	l249
  1564                           
  1565                           ;eeprom.c: 40: EECON1bits.WREN=0;
  1566  0317  1115               	bcf	21,2	;volsfr
  1567                           
  1568                           ;eeprom.c: 44: if (read_eeprom(address)==data)
  1569  0318  0020               	movlb	0	; select bank0
  1570  0319  0840               	movf	write_eeprom@address,w
  1571  031A  3183  238C         	fcall	_read_eeprom
  1572                           
  1573                           ;eeprom.c: 45: return 1;
  1574                           ;	Return value of _write_eeprom is never used
  1575  031C  0008               	return
  1576  031D                     __end_of_write_eeprom:	
  1577                           ;eeprom.c: 46: return 0;
  1578                           ;	Return value of _write_eeprom is never used
  1579                           
  1580                           
  1581                           	psect	text3
  1582  038C                     __ptext3:	
  1583 ;; *************** function _read_eeprom *****************
  1584 ;; Defined at:
  1585 ;;		line 7 in file "eeprom.c"
  1586 ;; Parameters:    Size  Location     Type
  1587 ;;  address         1    wreg     unsigned char 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  address         1    5[BANK0 ] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  1    wreg      unsigned char 
  1592 ;; Registers used:
  1593 ;;		wreg
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1599 ;;      Params:         0       0       0       0       0       0
  1600 ;;      Locals:         0       1       0       0       0       0
  1601 ;;      Temps:          0       2       0       0       0       0
  1602 ;;      Totals:         0       3       0       0       0       0
  1603 ;;Total ram usage:        3 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    4
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_setup
  1610 ;;		_write_eeprom
  1611 ;; This function uses a non-reentrant model
  1612 ;;
  1613                           
  1614                           
  1615                           ;psect for function _read_eeprom
  1616  038C                     _read_eeprom:	
  1617                           
  1618                           ;incstack = 0
  1619                           ; Regs used in _read_eeprom: [wreg]
  1620                           ;read_eeprom@address stored from wreg
  1621  038C  0020               	movlb	0	; select bank0
  1622  038D  00BC               	movwf	read_eeprom@address
  1623                           
  1624                           ;eeprom.c: 9: EEADR = address;
  1625  038E  083C               	movf	read_eeprom@address,w
  1626  038F  00BA               	movwf	??_read_eeprom
  1627  0390  01BB               	clrf	??_read_eeprom+1
  1628  0391  083A               	movf	??_read_eeprom,w
  1629  0392  0023               	movlb	3	; select bank3
  1630  0393  0091               	movwf	17	;volatile
  1631  0394  0020               	movlb	0	; select bank0
  1632  0395  083B               	movf	??_read_eeprom+1,w
  1633  0396  0023               	movlb	3	; select bank3
  1634  0397  0092               	movwf	18	;volatile
  1635                           
  1636                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  1637  0398  1395               	bcf	21,7	;volsfr
  1638                           
  1639                           ;eeprom.c: 15: EECON1bits.CFGS = 0;
  1640  0399  1315               	bcf	21,6	;volsfr
  1641                           
  1642                           ;eeprom.c: 18: EECON1bits.RD = 1;
  1643  039A  1415               	bsf	21,0	;volsfr
  1644                           
  1645                           ;eeprom.c: 21: return EEDATA;
  1646  039B  0813               	movf	19,w	;volatile
  1647  039C  0008               	return
  1648  039D                     __end_of_read_eeprom:	
  1649                           
  1650                           	psect	text4
  1651  03D3                     __ptext4:	
  1652 ;; *************** function _init_WDT *****************
  1653 ;; Defined at:
  1654 ;;		line 20 in file "watchdog.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;		None
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;		None
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		None
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1668 ;;      Params:         0       0       0       0       0       0
  1669 ;;      Locals:         0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0
  1671 ;;      Totals:         0       0       0       0       0       0
  1672 ;;Total ram usage:        0 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    4
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_setup
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           
  1683                           ;psect for function _init_WDT
  1684  03D3                     _init_WDT:	
  1685                           
  1686                           ;watchdog.c: 23: WDTCONbits.WDTPS0 = 0;
  1687                           
  1688                           ;incstack = 0
  1689                           ; Regs used in _init_WDT: []
  1690  03D3  0021               	movlb	1	; select bank1
  1691  03D4  1097               	bcf	23,1	;volatile
  1692                           
  1693                           ;watchdog.c: 24: WDTCONbits.WDTPS1 = 0;
  1694  03D5  1117               	bcf	23,2	;volatile
  1695                           
  1696                           ;watchdog.c: 25: WDTCONbits.WDTPS2 = 1;
  1697  03D6  1597               	bsf	23,3	;volatile
  1698                           
  1699                           ;watchdog.c: 26: WDTCONbits.WDTPS3 = 0;
  1700  03D7  1217               	bcf	23,4	;volatile
  1701                           
  1702                           ;watchdog.c: 27: WDTCONbits.WDTPS4 = 0;
  1703  03D8  1297               	bcf	23,5	;volatile
  1704  03D9  0008               	return
  1705  03DA                     __end_of_init_WDT:	
  1706                           
  1707                           	psect	text5
  1708  031D                     __ptext5:	
  1709 ;; *************** function _init_I2C *****************
  1710 ;; Defined at:
  1711 ;;		line 18 in file "i2c.c"
  1712 ;; Parameters:    Size  Location     Type
  1713 ;;  addr            1    wreg     unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  addr            1    4[BANK0 ] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;		None               void
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1725 ;;      Params:         0       0       0       0       0       0
  1726 ;;      Locals:         0       1       0       0       0       0
  1727 ;;      Temps:          0       1       0       0       0       0
  1728 ;;      Totals:         0       2       0       0       0       0
  1729 ;;Total ram usage:        2 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    4
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_setup
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           
  1740                           ;psect for function _init_I2C
  1741  031D                     _init_I2C:	
  1742                           
  1743                           ;incstack = 0
  1744                           ; Regs used in _init_I2C: [wreg+status,2+status,0]
  1745                           ;init_I2C@addr stored from wreg
  1746  031D  0020               	movlb	0	; select bank0
  1747  031E  00BB               	movwf	init_I2C@addr
  1748                           
  1749                           ;i2c.c: 19: bypass_flag = 0;
  1750  031F  01B4               	clrf	_bypass_flag	;volatile
  1751                           
  1752                           ;i2c.c: 21: panic_flag = 0;
  1753  0320  01B5               	clrf	_panic_flag	;volatile
  1754                           
  1755                           ;i2c.c: 24: PIE1bits.SSP1IE = 0;
  1756  0321  0021               	movlb	1	; select bank1
  1757  0322  1191               	bcf	17,3	;volatile
  1758                           
  1759                           ;i2c.c: 26: SSP1STATbits.CKE = 1;
  1760  0323  0024               	movlb	4	; select bank4
  1761  0324  1714               	bsf	20,6	;volatile
  1762                           
  1763                           ;i2c.c: 29: SSP1CON1bits.SSPEN = 1;
  1764  0325  1695               	bsf	21,5	;volatile
  1765                           
  1766                           ;i2c.c: 32: SSP1CON1bits.CKP = 1;
  1767  0326  1615               	bsf	21,4	;volatile
  1768                           
  1769                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b0110;
  1770  0327  0815               	movf	21,w	;volatile
  1771  0328  39F0               	andlw	-16
  1772  0329  3806               	iorlw	6
  1773  032A  0095               	movwf	21	;volatile
  1774                           
  1775                           ;i2c.c: 39: SSP1CON2bits.GCEN = 1;
  1776  032B  1796               	bsf	22,7	;volatile
  1777                           
  1778                           ;i2c.c: 42: SSP1CON2bits.SEN = 1;
  1779  032C  1416               	bsf	22,0	;volatile
  1780                           
  1781                           ;i2c.c: 45: SSP1MSK = 0xFF;
  1782  032D  30FF               	movlw	255
  1783  032E  0093               	movwf	19	;volatile
  1784                           
  1785                           ;i2c.c: 48: i2c_address = (addr << 1);
  1786  032F  0020               	movlb	0	; select bank0
  1787  0330  353B               	lslf	init_I2C@addr,w
  1788  0331  00BA               	movwf	??_init_I2C
  1789  0332  083A               	movf	??_init_I2C,w
  1790  0333  00CD               	movwf	_i2c_address	;volatile
  1791                           
  1792                           ;i2c.c: 51: SSP1ADD = (addr << 1);
  1793  0334  353B               	lslf	init_I2C@addr,w
  1794  0335  0024               	movlb	4	; select bank4
  1795  0336  0092               	movwf	18	;volatile
  1796                           
  1797                           ;i2c.c: 54: PIE1bits.SSP1IE = 1;
  1798  0337  0021               	movlb	1	; select bank1
  1799  0338  1591               	bsf	17,3	;volatile
  1800  0339  0008               	return
  1801  033A                     __end_of_init_I2C:	
  1802                           
  1803                           	psect	text6
  1804  039D                     __ptext6:	
  1805 ;; *************** function _init_ADC *****************
  1806 ;; Defined at:
  1807 ;;		line 22 in file "adc.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;		None
  1810 ;; Auto vars:     Size  Location     Type
  1811 ;;		None
  1812 ;; Return value:  Size  Location     Type
  1813 ;;		None               void
  1814 ;; Registers used:
  1815 ;;		wreg, status,2, status,0
  1816 ;; Tracked objects:
  1817 ;;		On entry : 0/0
  1818 ;;		On exit  : 0/0
  1819 ;;		Unchanged: 0/0
  1820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1821 ;;      Params:         0       0       0       0       0       0
  1822 ;;      Locals:         0       0       0       0       0       0
  1823 ;;      Temps:          0       0       0       0       0       0
  1824 ;;      Totals:         0       0       0       0       0       0
  1825 ;;Total ram usage:        0 bytes
  1826 ;; Hardware stack levels used:    1
  1827 ;; Hardware stack levels required when called:    4
  1828 ;; This function calls:
  1829 ;;		Nothing
  1830 ;; This function is called by:
  1831 ;;		_setup
  1832 ;; This function uses a non-reentrant model
  1833 ;;
  1834                           
  1835                           
  1836                           ;psect for function _init_ADC
  1837  039D                     _init_ADC:	
  1838                           
  1839                           ;adc.c: 25: FVRCONbits.FVREN = 1;
  1840                           
  1841                           ;incstack = 0
  1842                           ; Regs used in _init_ADC: [wreg+status,2+status,0]
  1843  039D  0022               	movlb	2	; select bank2
  1844  039E  1797               	bsf	23,7	;volatile
  1845                           
  1846                           ;adc.c: 28: FVRCONbits.ADFVR = 0b10;
  1847  039F  0817               	movf	23,w	;volatile
  1848  03A0  39FC               	andlw	-4
  1849  03A1  3802               	iorlw	2
  1850  03A2  0097               	movwf	23	;volatile
  1851                           
  1852                           ;adc.c: 32: ADCON1bits.ADPREF = 0b11;
  1853  03A3  3003               	movlw	3
  1854  03A4  0021               	movlb	1	; select bank1
  1855  03A5  049E               	iorwf	30,f	;volatile
  1856                           
  1857                           ;adc.c: 33: ADCON1bits.ADNREF = 0b00;
  1858  03A6  111E               	bcf	30,2	;volatile
  1859                           
  1860                           ;adc.c: 37: ADCON1bits.ADCS = 0b011;
  1861  03A7  081E               	movf	30,w	;volatile
  1862  03A8  398F               	andlw	-113
  1863  03A9  3830               	iorlw	48
  1864  03AA  009E               	movwf	30	;volatile
  1865                           
  1866                           ;adc.c: 40: ADCON1bits.ADFM = 1;
  1867  03AB  179E               	bsf	30,7	;volatile
  1868                           
  1869                           ;adc.c: 43: PIE1bits.ADIE = 1;
  1870  03AC  1711               	bsf	17,6	;volatile
  1871  03AD  0008               	return
  1872  03AE                     __end_of_init_ADC:	
  1873                           
  1874                           	psect	text7
  1875  0373                     __ptext7:	
  1876 ;; *************** function _event_wdt *****************
  1877 ;; Defined at:
  1878 ;;		line 31 in file "watchdog.c"
  1879 ;; Parameters:    Size  Location     Type
  1880 ;;		None
  1881 ;; Auto vars:     Size  Location     Type
  1882 ;;		None
  1883 ;; Return value:  Size  Location     Type
  1884 ;;		None               void
  1885 ;; Registers used:
  1886 ;;		wreg, status,2, status,0
  1887 ;; Tracked objects:
  1888 ;;		On entry : 0/0
  1889 ;;		On exit  : 0/0
  1890 ;;		Unchanged: 0/0
  1891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1892 ;;      Params:         0       0       0       0       0       0
  1893 ;;      Locals:         0       0       0       0       0       0
  1894 ;;      Temps:          0       0       0       0       0       0
  1895 ;;      Totals:         0       0       0       0       0       0
  1896 ;;Total ram usage:        0 bytes
  1897 ;; Hardware stack levels used:    1
  1898 ;; Hardware stack levels required when called:    4
  1899 ;; This function calls:
  1900 ;;		Nothing
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _event_wdt
  1908  0373                     _event_wdt:	
  1909                           
  1910                           ;watchdog.c: 36: if(bypass_count == bypass_limit) {
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _event_wdt: [wreg+status,2+status,0]
  1914  0373  0020               	movlb	0	; select bank0
  1915  0374  082B               	movf	_bypass_limit+1,w	;volatile
  1916  0375  0629               	xorwf	_bypass_count+1,w	;volatile
  1917  0376  1D03               	skipz
  1918  0377  2B7A               	goto	u285
  1919  0378  082A               	movf	_bypass_limit,w	;volatile
  1920  0379  0628               	xorwf	_bypass_count,w	;volatile
  1921  037A                     u285:	
  1922  037A  1D03               	skipz
  1923  037B  2B7E               	goto	l1371
  1924                           
  1925                           ;watchdog.c: 38: bypass_flag = 0;
  1926  037C  01B4               	clrf	_bypass_flag	;volatile
  1927                           
  1928                           ;watchdog.c: 39: }
  1929  037D  2B82               	goto	l1373
  1930  037E                     l1371:	
  1931                           
  1932                           ;watchdog.c: 41: else {
  1933                           ;watchdog.c: 42: bypass_count++;
  1934  037E  3001               	movlw	1
  1935  037F  07A8               	addwf	_bypass_count,f	;volatile
  1936  0380  3000               	movlw	0
  1937  0381  3DA9               	addwfc	_bypass_count+1,f	;volatile
  1938  0382                     l1373:	
  1939                           
  1940                           ;watchdog.c: 43: }
  1941                           ;watchdog.c: 50: adc_chan = 1;
  1942  0382  01FD               	clrf	_adc_chan
  1943  0383  0AFD               	incf	_adc_chan,f
  1944                           
  1945                           ;watchdog.c: 53: ADCON0bits.CHS = 10;
  1946  0384  0021               	movlb	1	; select bank1
  1947  0385  081D               	movf	29,w	;volatile
  1948  0386  3983               	andlw	-125
  1949  0387  3828               	iorlw	40
  1950  0388  009D               	movwf	29	;volatile
  1951                           
  1952                           ;watchdog.c: 56: ADCON0bits.ADON = 1;
  1953  0389  141D               	bsf	29,0	;volatile
  1954                           
  1955                           ;watchdog.c: 59: ADCON0bits.GO = 1;
  1956  038A  149D               	bsf	29,1	;volatile
  1957  038B  0008               	return
  1958  038C                     __end_of_event_wdt:	
  1959                           
  1960                           	psect	intentry
  1961  0004                     __pintentry:	
  1962 ;; *************** function _ISR *****************
  1963 ;; Defined at:
  1964 ;;		line 114 in file "firmware.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;		None
  1969 ;; Return value:  Size  Location     Type
  1970 ;;		None               void
  1971 ;; Registers used:
  1972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1978 ;;      Params:         0       0       0       0       0       0
  1979 ;;      Locals:         0       0       0       0       0       0
  1980 ;;      Temps:          1       0       0       0       0       0
  1981 ;;      Totals:         1       0       0       0       0       0
  1982 ;;Total ram usage:        1 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    3
  1985 ;; This function calls:
  1986 ;;		_ADC_ISR
  1987 ;;		_I2C_ISR
  1988 ;; This function is called by:
  1989 ;;		Interrupt level 1
  1990 ;; This function uses a non-reentrant model
  1991 ;;
  1992                           
  1993  0004                     _ISR:	
  1994                           
  1995                           ;incstack = 0
  1996                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1997  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1998  0005  3180               	pagesel	$
  1999  0006  0020               	movlb	0	; select bank0
  2000  0007  087F               	movf	127,w
  2001  0008  00FC               	movwf	??_ISR
  2002                           
  2003                           ;firmware.c: 116: INTCONbits.GIE = 0;
  2004  0009  138B               	bcf	11,7	;volatile
  2005                           
  2006                           ;firmware.c: 117: INTCONbits.PEIE = 0;
  2007  000A  130B               	bcf	11,6	;volatile
  2008                           
  2009                           ;firmware.c: 120: if( PIR1bits.SSP1IF ) I2C_ISR();
  2010  000B  1D91               	btfss	17,3	;volatile
  2011  000C  2810               	goto	i1l1385
  2012  000D  3180  202A  3180   	fcall	_I2C_ISR
  2013  0010                     i1l1385:	
  2014                           
  2015                           ;firmware.c: 123: if( PIR1bits.ADIF ) ADC_ISR();
  2016  0010  0020               	movlb	0	; select bank0
  2017  0011  1F11               	btfss	17,6	;volatile
  2018  0012  2815               	goto	i1l1389
  2019  0013  3182  22CE         	fcall	_ADC_ISR
  2020  0015                     i1l1389:	
  2021                           
  2022                           ;firmware.c: 126: INTCONbits.GIE = 1;
  2023  0015  178B               	bsf	11,7	;volatile
  2024                           
  2025                           ;firmware.c: 127: INTCONbits.PEIE = 1;
  2026  0016  170B               	bsf	11,6	;volatile
  2027  0017  087C               	movf	??_ISR,w
  2028  0018  0020               	movlb	0	; select bank0
  2029  0019  00FF               	movwf	127
  2030  001A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2031  001B  0009               	retfie
  2032  001C                     __end_of_ISR:	
  2033                           
  2034                           	psect	text9
  2035  002A                     __ptext9:	
  2036 ;; *************** function _I2C_ISR *****************
  2037 ;; Defined at:
  2038 ;;		line 57 in file "i2c.c"
  2039 ;; Parameters:    Size  Location     Type
  2040 ;;		None
  2041 ;; Auto vars:     Size  Location     Type
  2042 ;;  low_byte        1    2[BANK0 ] unsigned char 
  2043 ;;  high_byte       1    1[BANK0 ] unsigned char 
  2044 ;;  cmd             1    0[BANK0 ] unsigned char 
  2045 ;; Return value:  Size  Location     Type
  2046 ;;		None               void
  2047 ;; Registers used:
  2048 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2049 ;; Tracked objects:
  2050 ;;		On entry : 0/0
  2051 ;;		On exit  : 0/0
  2052 ;;		Unchanged: 0/0
  2053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2054 ;;      Params:         0       0       0       0       0       0
  2055 ;;      Locals:         0       3       0       0       0       0
  2056 ;;      Temps:          5       0       0       0       0       0
  2057 ;;      Totals:         5       3       0       0       0       0
  2058 ;;Total ram usage:        8 bytes
  2059 ;; Hardware stack levels used:    1
  2060 ;; Hardware stack levels required when called:    2
  2061 ;; This function calls:
  2062 ;;		_i2c_read
  2063 ;;		_i2c_write
  2064 ;;		i1_init_I2C
  2065 ;;		i1_read_eeprom
  2066 ;;		i1_write_eeprom
  2067 ;; This function is called by:
  2068 ;;		_ISR
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _I2C_ISR
  2074  002A                     _I2C_ISR:	
  2075                           
  2076                           ;i2c.c: 59: LATAbits.LATA6 = 1;
  2077                           
  2078                           ;incstack = 0
  2079                           ; Regs used in _I2C_ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2080  002A  0022               	movlb	2	; select bank2
  2081  002B  170C               	bsf	12,6	;volatile
  2082                           
  2083                           ;i2c.c: 62: if(SSP1CON1bits.CKP != 0) return;
  2084  002C  0024               	movlb	4	; select bank4
  2085  002D  1A15               	btfsc	21,4	;volatile
  2086  002E  0008               	return
  2087                           
  2088                           ;i2c.c: 65: if(SSP1STATbits.R_nW == 0) {
  2089  002F  1914               	btfsc	20,2	;volatile
  2090  0030  29C4               	goto	i1l1339
  2091                           
  2092                           ;i2c.c: 67: i2c_read();
  2093  0031  3183  23AE  3180   	fcall	_i2c_read
  2094                           
  2095                           ;i2c.c: 70: uint8_t cmd = i2c_read();
  2096  0034  3183  23AE  3180   	fcall	_i2c_read
  2097  0037  00F7               	movwf	??_I2C_ISR
  2098  0038  0877               	movf	??_I2C_ISR,w
  2099  0039  0020               	movlb	0	; select bank0
  2100  003A  00B7               	movwf	I2C_ISR@cmd
  2101                           
  2102                           ;i2c.c: 73: switch(cmd) {
  2103  003B  2921               	goto	i1l1313
  2104  003C                     i1l1263:	
  2105                           ;i2c.c: 75: case 0x00: {
  2106                           
  2107                           
  2108                           ;i2c.c: 77: bypass_flag = 0;
  2109  003C  01B4               	clrf	_bypass_flag	;volatile
  2110                           
  2111                           ;i2c.c: 79: break;
  2112  003D  29D5               	goto	i1l1343
  2113  003E                     i1l1265:	
  2114                           ;i2c.c: 80: }
  2115                           ;i2c.c: 82: case 0x01: {
  2116                           
  2117                           
  2118                           ;i2c.c: 84: bypass_flag = 1;
  2119  003E  3001               	movlw	1
  2120  003F  00F7               	movwf	??_I2C_ISR
  2121  0040  0877               	movf	??_I2C_ISR,w
  2122  0041  00B4               	movwf	_bypass_flag	;volatile
  2123                           
  2124                           ;i2c.c: 87: bypass_count = 0;
  2125  0042  01A8               	clrf	_bypass_count	;volatile
  2126  0043  01A9               	clrf	_bypass_count+1	;volatile
  2127                           
  2128                           ;i2c.c: 89: break;
  2129  0044  29D5               	goto	i1l1343
  2130  0045                     i1l1269:	
  2131                           ;i2c.c: 90: }
  2132                           ;i2c.c: 92: case 0x02: {
  2133                           
  2134                           
  2135                           ;i2c.c: 94: panic_flag = 1;
  2136  0045  3001               	movlw	1
  2137  0046  00F7               	movwf	??_I2C_ISR
  2138  0047  0877               	movf	??_I2C_ISR,w
  2139  0048  00B5               	movwf	_panic_flag	;volatile
  2140                           
  2141                           ;i2c.c: 96: break;
  2142  0049  29D5               	goto	i1l1343
  2143  004A                     i1l1271:	
  2144                           ;i2c.c: 97: }
  2145                           ;i2c.c: 100: case 0x03: {
  2146                           
  2147                           
  2148                           ;i2c.c: 102: panic_flag = 0;
  2149  004A  01B5               	clrf	_panic_flag	;volatile
  2150                           
  2151                           ;i2c.c: 104: break;
  2152  004B  29D5               	goto	i1l1343
  2153  004C                     i1l1273:	
  2154                           ;i2c.c: 105: }
  2155                           ;i2c.c: 107: case 0x04: {
  2156                           
  2157                           
  2158                           ;i2c.c: 109: i2c_address = i2c_read();
  2159  004C  3183  23AE  3180   	fcall	_i2c_read
  2160  004F  00F7               	movwf	??_I2C_ISR
  2161  0050  0877               	movf	??_I2C_ISR,w
  2162  0051  0020               	movlb	0	; select bank0
  2163  0052  00CD               	movwf	_i2c_address	;volatile
  2164                           
  2165                           ;i2c.c: 112: write_eeprom(1, i2c_address);
  2166  0053  084D               	movf	_i2c_address,w	;volatile
  2167  0054  00F7               	movwf	??_I2C_ISR
  2168  0055  0877               	movf	??_I2C_ISR,w
  2169  0056  00F3               	movwf	i1write_eeprom@data
  2170  0057  3001               	movlw	1
  2171  0058  3183  2357  3180   	fcall	i1_write_eeprom
  2172                           
  2173                           ;i2c.c: 115: init_I2C(i2c_address);
  2174  005B  0020               	movlb	0	; select bank0
  2175  005C  084D               	movf	_i2c_address,w	;volatile
  2176  005D  3183  233A  3180   	fcall	i1_init_I2C
  2177  0060  0001               	reset	;# 
  2178                           
  2179                           ;i2c.c: 120: break;
  2180  0061  29D5               	goto	i1l1343
  2181  0062                     i1l1279:	
  2182                           ;i2c.c: 121: }
  2183                           ;i2c.c: 123: case 0x05: {
  2184                           
  2185                           
  2186                           ;i2c.c: 125: uint8_t high_byte = i2c_read();
  2187  0062  3183  23AE  3180   	fcall	_i2c_read
  2188  0065  00F7               	movwf	??_I2C_ISR
  2189  0066  0877               	movf	??_I2C_ISR,w
  2190  0067  0020               	movlb	0	; select bank0
  2191  0068  00B8               	movwf	I2C_ISR@high_byte
  2192                           
  2193                           ;i2c.c: 126: uint8_t low_byte = i2c_read();
  2194  0069  3183  23AE  3180   	fcall	_i2c_read
  2195  006C  00F7               	movwf	??_I2C_ISR
  2196  006D  0877               	movf	??_I2C_ISR,w
  2197  006E  0020               	movlb	0	; select bank0
  2198  006F  00B9               	movwf	I2C_ISR@low_byte
  2199                           
  2200                           ;i2c.c: 129: bypass_limit = (high_byte << 8) | low_byte;
  2201  0070  0839               	movf	I2C_ISR@low_byte,w
  2202  0071  00F7               	movwf	??_I2C_ISR
  2203  0072  01F8               	clrf	??_I2C_ISR+1
  2204  0073  0838               	movf	I2C_ISR@high_byte,w
  2205  0074  00F9               	movwf	??_I2C_ISR+2
  2206  0075  01FA               	clrf	??_I2C_ISR+3
  2207  0076  0879               	movf	??_I2C_ISR+2,w
  2208  0077  00FA               	movwf	??_I2C_ISR+3
  2209  0078  01F9               	clrf	??_I2C_ISR+2
  2210  0079  0877               	movf	??_I2C_ISR,w
  2211  007A  0479               	iorwf	??_I2C_ISR+2,w
  2212  007B  00AA               	movwf	_bypass_limit	;volatile
  2213  007C  0878               	movf	??_I2C_ISR+1,w
  2214  007D  047A               	iorwf	??_I2C_ISR+3,w
  2215  007E  00AB               	movwf	_bypass_limit+1	;volatile
  2216                           
  2217                           ;i2c.c: 132: write_eeprom(2, high_byte);
  2218  007F  0838               	movf	I2C_ISR@high_byte,w
  2219  0080  00F7               	movwf	??_I2C_ISR
  2220  0081  0877               	movf	??_I2C_ISR,w
  2221  0082  00F3               	movwf	i1write_eeprom@data
  2222  0083  3002               	movlw	2
  2223  0084  3183  2357  3180   	fcall	i1_write_eeprom
  2224                           
  2225                           ;i2c.c: 133: write_eeprom(2 + 1, low_byte);
  2226  0087  0020               	movlb	0	; select bank0
  2227  0088  0839               	movf	I2C_ISR@low_byte,w
  2228  0089  00F7               	movwf	??_I2C_ISR
  2229  008A  0877               	movf	??_I2C_ISR,w
  2230  008B  00F3               	movwf	i1write_eeprom@data
  2231  008C  3003               	movlw	3
  2232  008D  3183  2357  3180   	fcall	i1_write_eeprom
  2233                           
  2234                           ;i2c.c: 135: break;
  2235  0090  29D5               	goto	i1l1343
  2236  0091                     i1l1287:	
  2237                           ;i2c.c: 136: }
  2238                           ;i2c.c: 138: case 0x06: {
  2239                           
  2240                           
  2241                           ;i2c.c: 141: cal_data[3] = i2c_read();
  2242  0091  3183  23AE  3180   	fcall	_i2c_read
  2243  0094  00F7               	movwf	??_I2C_ISR
  2244  0095  0877               	movf	??_I2C_ISR,w
  2245  0096  0020               	movlb	0	; select bank0
  2246  0097  00A3               	movwf	_cal_data+3	;volatile
  2247                           
  2248                           ;i2c.c: 142: cal_data[2] = i2c_read();
  2249  0098  3183  23AE  3180   	fcall	_i2c_read
  2250  009B  00F7               	movwf	??_I2C_ISR
  2251  009C  0877               	movf	??_I2C_ISR,w
  2252  009D  0020               	movlb	0	; select bank0
  2253  009E  00A2               	movwf	_cal_data+2	;volatile
  2254                           
  2255                           ;i2c.c: 143: cal_data[1] = i2c_read();
  2256  009F  3183  23AE  3180   	fcall	_i2c_read
  2257  00A2  00F7               	movwf	??_I2C_ISR
  2258  00A3  0877               	movf	??_I2C_ISR,w
  2259  00A4  0020               	movlb	0	; select bank0
  2260  00A5  00A1               	movwf	_cal_data+1	;volatile
  2261                           
  2262                           ;i2c.c: 144: cal_data[0] = i2c_read();
  2263  00A6  3183  23AE  3180   	fcall	_i2c_read
  2264  00A9  00F7               	movwf	??_I2C_ISR
  2265  00AA  0877               	movf	??_I2C_ISR,w
  2266  00AB  0020               	movlb	0	; select bank0
  2267  00AC  00A0               	movwf	_cal_data	;volatile
  2268                           
  2269                           ;i2c.c: 147: slope = (cal_data[3] << 8) | cal_data[2];
  2270  00AD  0823               	movf	_cal_data+3,w	;volatile
  2271  00AE  00AF               	movwf	_slope+1	;volatile
  2272  00AF  0822               	movf	_cal_data+2,w	;volatile
  2273  00B0  00AE               	movwf	_slope	;volatile
  2274                           
  2275                           ;i2c.c: 148: offset = (cal_data[1] << 8) | cal_data[0];
  2276  00B1  0821               	movf	_cal_data+1,w	;volatile
  2277  00B2  00AD               	movwf	_offset+1	;volatile
  2278  00B3  0820               	movf	_cal_data,w	;volatile
  2279  00B4  00AC               	movwf	_offset	;volatile
  2280                           
  2281                           ;i2c.c: 152: write_eeprom(4, cal_data[3]);
  2282  00B5  0823               	movf	_cal_data+3,w	;volatile
  2283  00B6  00F7               	movwf	??_I2C_ISR
  2284  00B7  0877               	movf	??_I2C_ISR,w
  2285  00B8  00F3               	movwf	i1write_eeprom@data
  2286  00B9  3004               	movlw	4
  2287  00BA  3183  2357  3180   	fcall	i1_write_eeprom
  2288                           
  2289                           ;i2c.c: 153: write_eeprom(4 + 1, cal_data[2]);
  2290  00BD  0020               	movlb	0	; select bank0
  2291  00BE  0822               	movf	_cal_data+2,w	;volatile
  2292  00BF  00F7               	movwf	??_I2C_ISR
  2293  00C0  0877               	movf	??_I2C_ISR,w
  2294  00C1  00F3               	movwf	i1write_eeprom@data
  2295  00C2  3005               	movlw	5
  2296  00C3  3183  2357  3180   	fcall	i1_write_eeprom
  2297                           
  2298                           ;i2c.c: 154: write_eeprom(4 + 2, cal_data[1]);
  2299  00C6  0020               	movlb	0	; select bank0
  2300  00C7  0821               	movf	_cal_data+1,w	;volatile
  2301  00C8  00F7               	movwf	??_I2C_ISR
  2302  00C9  0877               	movf	??_I2C_ISR,w
  2303  00CA  00F3               	movwf	i1write_eeprom@data
  2304  00CB  3006               	movlw	6
  2305  00CC  3183  2357  3180   	fcall	i1_write_eeprom
  2306                           
  2307                           ;i2c.c: 155: write_eeprom(4 + 3, cal_data[0]);
  2308  00CF  0020               	movlb	0	; select bank0
  2309  00D0  0820               	movf	_cal_data,w	;volatile
  2310  00D1  00F7               	movwf	??_I2C_ISR
  2311  00D2  0877               	movf	??_I2C_ISR,w
  2312  00D3  00F3               	movwf	i1write_eeprom@data
  2313  00D4  3007               	movlw	7
  2314  00D5  3183  2357  3180   	fcall	i1_write_eeprom
  2315                           
  2316                           ;i2c.c: 157: break;
  2317  00D8  29D5               	goto	i1l1343
  2318  00D9                     i1l1301:	
  2319                           ;i2c.c: 158: }
  2320                           ;i2c.c: 159: case 0x07: {
  2321                           
  2322                           
  2323                           ;i2c.c: 160: serial[3] = i2c_read();
  2324  00D9  3183  23AE  3180   	fcall	_i2c_read
  2325  00DC  00F7               	movwf	??_I2C_ISR
  2326  00DD  0877               	movf	??_I2C_ISR,w
  2327  00DE  0020               	movlb	0	; select bank0
  2328  00DF  00A7               	movwf	_serial+3	;volatile
  2329                           
  2330                           ;i2c.c: 161: serial[2] = i2c_read();
  2331  00E0  3183  23AE  3180   	fcall	_i2c_read
  2332  00E3  00F7               	movwf	??_I2C_ISR
  2333  00E4  0877               	movf	??_I2C_ISR,w
  2334  00E5  0020               	movlb	0	; select bank0
  2335  00E6  00A6               	movwf	_serial+2	;volatile
  2336                           
  2337                           ;i2c.c: 162: serial[1] = i2c_read();
  2338  00E7  3183  23AE  3180   	fcall	_i2c_read
  2339  00EA  00F7               	movwf	??_I2C_ISR
  2340  00EB  0877               	movf	??_I2C_ISR,w
  2341  00EC  0020               	movlb	0	; select bank0
  2342  00ED  00A5               	movwf	_serial+1	;volatile
  2343                           
  2344                           ;i2c.c: 163: serial[0] = i2c_read();
  2345  00EE  3183  23AE  3180   	fcall	_i2c_read
  2346  00F1  00F7               	movwf	??_I2C_ISR
  2347  00F2  0877               	movf	??_I2C_ISR,w
  2348  00F3  0020               	movlb	0	; select bank0
  2349  00F4  00A4               	movwf	_serial	;volatile
  2350                           
  2351                           ;i2c.c: 165: write_eeprom(8, serial[3]);
  2352  00F5  0827               	movf	_serial+3,w	;volatile
  2353  00F6  00F7               	movwf	??_I2C_ISR
  2354  00F7  0877               	movf	??_I2C_ISR,w
  2355  00F8  00F3               	movwf	i1write_eeprom@data
  2356  00F9  3008               	movlw	8
  2357  00FA  3183  2357  3180   	fcall	i1_write_eeprom
  2358                           
  2359                           ;i2c.c: 166: write_eeprom(8 + 1, serial[2]);
  2360  00FD  0020               	movlb	0	; select bank0
  2361  00FE  0826               	movf	_serial+2,w	;volatile
  2362  00FF  00F7               	movwf	??_I2C_ISR
  2363  0100  0877               	movf	??_I2C_ISR,w
  2364  0101  00F3               	movwf	i1write_eeprom@data
  2365  0102  3009               	movlw	9
  2366  0103  3183  2357  3180   	fcall	i1_write_eeprom
  2367                           
  2368                           ;i2c.c: 167: write_eeprom(8 + 2, serial[1]);
  2369  0106  0020               	movlb	0	; select bank0
  2370  0107  0825               	movf	_serial+1,w	;volatile
  2371  0108  00F7               	movwf	??_I2C_ISR
  2372  0109  0877               	movf	??_I2C_ISR,w
  2373  010A  00F3               	movwf	i1write_eeprom@data
  2374  010B  300A               	movlw	10
  2375  010C  3183  2357  3180   	fcall	i1_write_eeprom
  2376                           
  2377                           ;i2c.c: 168: write_eeprom(8 + 3, serial[0]);
  2378  010F  0020               	movlb	0	; select bank0
  2379  0110  0824               	movf	_serial,w	;volatile
  2380  0111  00F7               	movwf	??_I2C_ISR
  2381  0112  0877               	movf	??_I2C_ISR,w
  2382  0113  00F3               	movwf	i1write_eeprom@data
  2383  0114  300B               	movlw	11
  2384  0115  3183  2357  3180   	fcall	i1_write_eeprom
  2385                           
  2386                           ;i2c.c: 170: break;
  2387  0118  29D5               	goto	i1l1343
  2388  0119                     i1l1311:	
  2389                           ;i2c.c: 171: }
  2390                           ;i2c.c: 172: case 0x30: {
  2391                           
  2392                           
  2393                           ;i2c.c: 173: read_type = i2c_read();
  2394  0119  3183  23AE  3180   	fcall	_i2c_read
  2395  011C  00F7               	movwf	??_I2C_ISR
  2396  011D  0877               	movf	??_I2C_ISR,w
  2397  011E  0020               	movlb	0	; select bank0
  2398  011F  00B6               	movwf	_read_type	;volatile
  2399                           
  2400                           ;i2c.c: 179: }
  2401                           ;i2c.c: 180: }
  2402                           
  2403                           ;i2c.c: 176: }
  2404                           ;i2c.c: 177: default: {
  2405                           
  2406                           ;i2c.c: 175: break;
  2407  0120  29D5               	goto	i1l1343
  2408  0121                     i1l1313:	
  2409  0121  0837               	movf	I2C_ISR@cmd,w
  2410                           
  2411                           ; Switch size 1, requested type "space"
  2412                           ; Number of cases is 9, Range of values is 0 to 48
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte           28    15 (average)
  2416                           ; direct_byte          104     6 (fixed)
  2417                           ; jumptable            260     6 (fixed)
  2418                           ;	Chosen strategy is simple_byte
  2419  0122  3A00               	xorlw	0	; case 0
  2420  0123  1903               	skipnz
  2421  0124  283C               	goto	i1l1263
  2422  0125  3A01               	xorlw	1	; case 1
  2423  0126  1903               	skipnz
  2424  0127  283E               	goto	i1l1265
  2425  0128  3A03               	xorlw	3	; case 2
  2426  0129  1903               	skipnz
  2427  012A  2845               	goto	i1l1269
  2428  012B  3A01               	xorlw	1	; case 3
  2429  012C  1903               	skipnz
  2430  012D  284A               	goto	i1l1271
  2431  012E  3A07               	xorlw	7	; case 4
  2432  012F  1903               	skipnz
  2433  0130  284C               	goto	i1l1273
  2434  0131  3A01               	xorlw	1	; case 5
  2435  0132  1903               	skipnz
  2436  0133  2862               	goto	i1l1279
  2437  0134  3A03               	xorlw	3	; case 6
  2438  0135  1903               	skipnz
  2439  0136  2891               	goto	i1l1287
  2440  0137  3A01               	xorlw	1	; case 7
  2441  0138  1903               	skipnz
  2442  0139  28D9               	goto	i1l1301
  2443  013A  3A37               	xorlw	55	; case 48
  2444  013B  1903               	skipnz
  2445  013C  2919               	goto	i1l1311
  2446  013D  29D5               	goto	i1l1343
  2447                           
  2448                           ;i2c.c: 181: }
  2449  013E  29D5               	goto	i1l1343
  2450  013F                     i1l1315:	
  2451                           ;i2c.c: 185: case 0x00: {
  2452                           
  2453                           ;i2c.c: 183: else {
  2454                           ;i2c.c: 184: switch(read_type) {
  2455                           
  2456                           
  2457                           ;i2c.c: 187: i2c_write(voltage >> 8);
  2458  013F  0833               	movf	_voltage+1,w
  2459  0140  3183  23CB  3180   	fcall	_i2c_write
  2460                           
  2461                           ;i2c.c: 188: i2c_write(voltage & 0xFF);
  2462  0143  0020               	movlb	0	; select bank0
  2463  0144  0832               	movf	_voltage,w
  2464  0145  3183  23CB  3180   	fcall	_i2c_write
  2465                           
  2466                           ;i2c.c: 191: i2c_write(temp >> 8);
  2467  0148  0020               	movlb	0	; select bank0
  2468  0149  0831               	movf	_temp+1,w
  2469  014A  3183  23CB  3180   	fcall	_i2c_write
  2470                           
  2471                           ;i2c.c: 192: i2c_write(temp & 0xFF);
  2472  014D  0020               	movlb	0	; select bank0
  2473  014E  0830               	movf	_temp,w
  2474  014F  3183  23CB  3180   	fcall	_i2c_write
  2475                           
  2476                           ;i2c.c: 193: break;
  2477  0152  29D3               	goto	i1l1341
  2478  0153                     i1l1317:	
  2479                           ;i2c.c: 195: }
  2480                           ;i2c.c: 196: case 0x01: {
  2481                           
  2482                           
  2483                           ;i2c.c: 198: serial[3] = read_eeprom(8);
  2484  0153  3008               	movlw	8
  2485  0154  3183  23BD  3180   	fcall	i1_read_eeprom
  2486  0157  00F7               	movwf	??_I2C_ISR
  2487  0158  0877               	movf	??_I2C_ISR,w
  2488  0159  0020               	movlb	0	; select bank0
  2489  015A  00A7               	movwf	_serial+3	;volatile
  2490                           
  2491                           ;i2c.c: 199: serial[2] = read_eeprom(8 + 1);
  2492  015B  3009               	movlw	9
  2493  015C  3183  23BD  3180   	fcall	i1_read_eeprom
  2494  015F  00F7               	movwf	??_I2C_ISR
  2495  0160  0877               	movf	??_I2C_ISR,w
  2496  0161  0020               	movlb	0	; select bank0
  2497  0162  00A6               	movwf	_serial+2	;volatile
  2498                           
  2499                           ;i2c.c: 200: serial[1] = read_eeprom(8 + 2);
  2500  0163  300A               	movlw	10
  2501  0164  3183  23BD  3180   	fcall	i1_read_eeprom
  2502  0167  00F7               	movwf	??_I2C_ISR
  2503  0168  0877               	movf	??_I2C_ISR,w
  2504  0169  0020               	movlb	0	; select bank0
  2505  016A  00A5               	movwf	_serial+1	;volatile
  2506                           
  2507                           ;i2c.c: 201: serial[0] = read_eeprom(8 + 3);
  2508  016B  300B               	movlw	11
  2509  016C  3183  23BD  3180   	fcall	i1_read_eeprom
  2510  016F  00F7               	movwf	??_I2C_ISR
  2511  0170  0877               	movf	??_I2C_ISR,w
  2512  0171  0020               	movlb	0	; select bank0
  2513  0172  00A4               	movwf	_serial	;volatile
  2514                           
  2515                           ;i2c.c: 203: i2c_write(serial[3]);
  2516  0173  0827               	movf	_serial+3,w	;volatile
  2517  0174  3183  23CB  3180   	fcall	_i2c_write
  2518                           
  2519                           ;i2c.c: 204: i2c_write(serial[2]);
  2520  0177  0020               	movlb	0	; select bank0
  2521  0178  0826               	movf	_serial+2,w	;volatile
  2522  0179  3183  23CB  3180   	fcall	_i2c_write
  2523                           
  2524                           ;i2c.c: 205: i2c_write(serial[1]);
  2525  017C  0020               	movlb	0	; select bank0
  2526  017D  0825               	movf	_serial+1,w	;volatile
  2527  017E  3183  23CB  3180   	fcall	_i2c_write
  2528                           
  2529                           ;i2c.c: 206: i2c_write(serial[0]);
  2530  0181  0020               	movlb	0	; select bank0
  2531  0182  0824               	movf	_serial,w	;volatile
  2532  0183  3183  23CB  3180   	fcall	_i2c_write
  2533                           
  2534                           ;i2c.c: 207: break;
  2535  0186  29D3               	goto	i1l1341
  2536  0187                     i1l1327:	
  2537                           ;i2c.c: 208: }
  2538                           ;i2c.c: 209: case 0x02: {
  2539                           
  2540                           
  2541                           ;i2c.c: 211: cal_data[3] = read_eeprom(4);
  2542  0187  3004               	movlw	4
  2543  0188  3183  23BD  3180   	fcall	i1_read_eeprom
  2544  018B  00F7               	movwf	??_I2C_ISR
  2545  018C  0877               	movf	??_I2C_ISR,w
  2546  018D  0020               	movlb	0	; select bank0
  2547  018E  00A3               	movwf	_cal_data+3	;volatile
  2548                           
  2549                           ;i2c.c: 212: cal_data[2] = read_eeprom(4 + 1);
  2550  018F  3005               	movlw	5
  2551  0190  3183  23BD  3180   	fcall	i1_read_eeprom
  2552  0193  00F7               	movwf	??_I2C_ISR
  2553  0194  0877               	movf	??_I2C_ISR,w
  2554  0195  0020               	movlb	0	; select bank0
  2555  0196  00A2               	movwf	_cal_data+2	;volatile
  2556                           
  2557                           ;i2c.c: 213: cal_data[1] = read_eeprom(4 + 2);
  2558  0197  3006               	movlw	6
  2559  0198  3183  23BD  3180   	fcall	i1_read_eeprom
  2560  019B  00F7               	movwf	??_I2C_ISR
  2561  019C  0877               	movf	??_I2C_ISR,w
  2562  019D  0020               	movlb	0	; select bank0
  2563  019E  00A1               	movwf	_cal_data+1	;volatile
  2564                           
  2565                           ;i2c.c: 214: cal_data[0] = read_eeprom(4 + 3);
  2566  019F  3007               	movlw	7
  2567  01A0  3183  23BD  3180   	fcall	i1_read_eeprom
  2568  01A3  00F7               	movwf	??_I2C_ISR
  2569  01A4  0877               	movf	??_I2C_ISR,w
  2570  01A5  0020               	movlb	0	; select bank0
  2571  01A6  00A0               	movwf	_cal_data	;volatile
  2572                           
  2573                           ;i2c.c: 217: i2c_write(cal_data[3]);
  2574  01A7  0823               	movf	_cal_data+3,w	;volatile
  2575  01A8  3183  23CB  3180   	fcall	_i2c_write
  2576                           
  2577                           ;i2c.c: 218: i2c_write(cal_data[2]);
  2578  01AB  0020               	movlb	0	; select bank0
  2579  01AC  0822               	movf	_cal_data+2,w	;volatile
  2580  01AD  3183  23CB  3180   	fcall	_i2c_write
  2581                           
  2582                           ;i2c.c: 219: i2c_write(cal_data[1]);
  2583  01B0  0020               	movlb	0	; select bank0
  2584  01B1  0821               	movf	_cal_data+1,w	;volatile
  2585  01B2  3183  23CB  3180   	fcall	_i2c_write
  2586                           
  2587                           ;i2c.c: 220: i2c_write(cal_data[0]);
  2588  01B5  0020               	movlb	0	; select bank0
  2589  01B6  0820               	movf	_cal_data,w	;volatile
  2590  01B7  3183  23CB  3180   	fcall	_i2c_write
  2591                           
  2592                           ;i2c.c: 221: break;
  2593  01BA  29D3               	goto	i1l1341
  2594  01BB                     i1l1337:	
  2595                           ;i2c.c: 222: }
  2596                           ;i2c.c: 223: case 0x03: {
  2597                           
  2598                           
  2599                           ;i2c.c: 225: i2c_write(0xA5);
  2600  01BB  30A5               	movlw	165
  2601  01BC  3183  23CB  3180   	fcall	_i2c_write
  2602                           
  2603                           ;i2c.c: 226: i2c_write(0xA5);
  2604  01BF  30A5               	movlw	165
  2605  01C0  3183  23CB  3180   	fcall	_i2c_write
  2606                           
  2607                           ;i2c.c: 231: }
  2608                           ;i2c.c: 232: }
  2609                           
  2610                           ;i2c.c: 228: }
  2611                           ;i2c.c: 229: default: {
  2612                           
  2613                           ;i2c.c: 227: break;
  2614  01C3  29D3               	goto	i1l1341
  2615  01C4                     i1l1339:	
  2616  01C4  0020               	movlb	0	; select bank0
  2617  01C5  0836               	movf	_read_type,w	;volatile
  2618                           
  2619                           ; Switch size 1, requested type "space"
  2620                           ; Number of cases is 4, Range of values is 0 to 3
  2621                           ; switch strategies available:
  2622                           ; Name         Instructions Cycles
  2623                           ; simple_byte           13     7 (average)
  2624                           ; direct_byte           14     6 (fixed)
  2625                           ; jumptable            260     6 (fixed)
  2626                           ;	Chosen strategy is simple_byte
  2627  01C6  3A00               	xorlw	0	; case 0
  2628  01C7  1903               	skipnz
  2629  01C8  293F               	goto	i1l1315
  2630  01C9  3A01               	xorlw	1	; case 1
  2631  01CA  1903               	skipnz
  2632  01CB  2953               	goto	i1l1317
  2633  01CC  3A03               	xorlw	3	; case 2
  2634  01CD  1903               	skipnz
  2635  01CE  2987               	goto	i1l1327
  2636  01CF  3A01               	xorlw	1	; case 3
  2637  01D0  1903               	skipnz
  2638  01D1  29BB               	goto	i1l1337
  2639  01D2  29D3               	goto	i1l1341
  2640  01D3                     i1l1341:	
  2641                           
  2642                           ;i2c.c: 234: read_type = 0x00;
  2643  01D3  0020               	movlb	0	; select bank0
  2644  01D4  01B6               	clrf	_read_type	;volatile
  2645  01D5                     i1l1343:	
  2646                           
  2647                           ;i2c.c: 235: }
  2648                           ;i2c.c: 238: SSP1CON1bits.CKP = 1;
  2649  01D5  0024               	movlb	4	; select bank4
  2650  01D6  1615               	bsf	21,4	;volatile
  2651                           
  2652                           ;i2c.c: 241: PIR1bits.SSP1IF = 0;
  2653  01D7  0020               	movlb	0	; select bank0
  2654  01D8  1191               	bcf	17,3	;volatile
  2655                           
  2656                           ;i2c.c: 244: LATAbits.LATA6 = 0;
  2657  01D9  0022               	movlb	2	; select bank2
  2658  01DA  130C               	bcf	12,6	;volatile
  2659  01DB  0008               	return
  2660  01DC                     __end_of_I2C_ISR:	
  2661                           
  2662                           	psect	text10
  2663  0357                     __ptext10:	
  2664 ;; *************** function i1_write_eeprom *****************
  2665 ;; Defined at:
  2666 ;;		line 25 in file "eeprom.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  address         1    wreg     unsigned char 
  2669 ;;  data            1    3[COMMON] unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  address         1    6[COMMON] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  1    wreg      unsigned char 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2681 ;;      Params:         1       0       0       0       0       0
  2682 ;;      Locals:         1       0       0       0       0       0
  2683 ;;      Temps:          2       0       0       0       0       0
  2684 ;;      Totals:         4       0       0       0       0       0
  2685 ;;Total ram usage:        4 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    1
  2688 ;; This function calls:
  2689 ;;		i1_read_eeprom
  2690 ;; This function is called by:
  2691 ;;		_I2C_ISR
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function i1_write_eeprom
  2697  0357                     i1_write_eeprom:	
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in i1_write_eeprom: [wreg+status,2+status,0+pclath+cstack]
  2701                           ;i1write_eeprom@address stored from wreg
  2702  0357  00F6               	movwf	i1write_eeprom@address
  2703                           
  2704                           ;eeprom.c: 26: EECON1bits.WREN=1;
  2705  0358  0023               	movlb	3	; select bank3
  2706  0359  1515               	bsf	21,2	;volsfr
  2707                           
  2708                           ;eeprom.c: 27: EEADR=address;
  2709  035A  0876               	movf	i1write_eeprom@address,w
  2710  035B  00F4               	movwf	??i1_write_eeprom
  2711  035C  01F5               	clrf	??i1_write_eeprom+1
  2712  035D  0874               	movf	??i1_write_eeprom,w
  2713  035E  0091               	movwf	17	;volatile
  2714  035F  0875               	movf	??i1_write_eeprom+1,w
  2715  0360  0092               	movwf	18	;volatile
  2716                           
  2717                           ;eeprom.c: 28: EEDATA=data;
  2718  0361  0873               	movf	i1write_eeprom@data,w
  2719  0362  0093               	movwf	19	;volatile
  2720                           
  2721                           ;eeprom.c: 29: EECON1bits.EEPGD=0;
  2722  0363  1395               	bcf	21,7	;volsfr
  2723                           
  2724                           ;eeprom.c: 30: EECON1bits.CFGS=0;
  2725  0364  1315               	bcf	21,6	;volsfr
  2726                           
  2727                           ;eeprom.c: 31: INTCONbits.GIE=0;
  2728  0365  138B               	bcf	11,7	;volatile
  2729                           
  2730                           ;eeprom.c: 33: EECON2=0x55;
  2731  0366  3055               	movlw	85
  2732  0367  0096               	movwf	22	;volsfr
  2733                           
  2734                           ;eeprom.c: 34: EECON2=0xAA;
  2735  0368  30AA               	movlw	170
  2736  0369  0096               	movwf	22	;volsfr
  2737                           
  2738                           ;eeprom.c: 35: EECON1bits.WR=1;
  2739  036A  1495               	bsf	21,1	;volsfr
  2740                           
  2741                           ;eeprom.c: 37: INTCONbits.GIE=1;
  2742  036B  178B               	bsf	11,7	;volatile
  2743  036C                     i1l249:	
  2744                           ;eeprom.c: 38: while (EECON1bits.WR==1);
  2745                           
  2746  036C  1895               	btfsc	21,1	;volsfr
  2747  036D  2B6C               	goto	i1l249
  2748                           
  2749                           ;eeprom.c: 40: EECON1bits.WREN=0;
  2750  036E  1115               	bcf	21,2	;volsfr
  2751                           
  2752                           ;eeprom.c: 44: if (read_eeprom(address)==data)
  2753  036F  0876               	movf	i1write_eeprom@address,w
  2754  0370  3183  23BD         	fcall	i1_read_eeprom
  2755                           
  2756                           ;eeprom.c: 45: return 1;
  2757                           ;	Return value of i1_write_eeprom is never used
  2758  0372  0008               	return
  2759  0373                     __end_ofi1_write_eeprom:	
  2760                           ;eeprom.c: 46: return 0;
  2761                           ;	Return value of i1_write_eeprom is never used
  2762                           
  2763                           
  2764                           	psect	text11
  2765  03BD                     __ptext11:	
  2766 ;; *************** function i1_read_eeprom *****************
  2767 ;; Defined at:
  2768 ;;		line 7 in file "eeprom.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  address         1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  address         1    2[COMMON] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  1    wreg      unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2782 ;;      Params:         0       0       0       0       0       0
  2783 ;;      Locals:         1       0       0       0       0       0
  2784 ;;      Temps:          2       0       0       0       0       0
  2785 ;;      Totals:         3       0       0       0       0       0
  2786 ;;Total ram usage:        3 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; This function calls:
  2789 ;;		Nothing
  2790 ;; This function is called by:
  2791 ;;		_I2C_ISR
  2792 ;;		i1_write_eeprom
  2793 ;; This function uses a non-reentrant model
  2794 ;;
  2795                           
  2796                           
  2797                           ;psect for function i1_read_eeprom
  2798  03BD                     i1_read_eeprom:	
  2799                           
  2800                           ;incstack = 0
  2801                           ; Regs used in i1_read_eeprom: [wreg]
  2802                           ;i1read_eeprom@address stored from wreg
  2803  03BD  00F2               	movwf	i1read_eeprom@address
  2804                           
  2805                           ;eeprom.c: 9: EEADR = address;
  2806  03BE  0872               	movf	i1read_eeprom@address,w
  2807  03BF  00F0               	movwf	??i1_read_eeprom
  2808  03C0  01F1               	clrf	??i1_read_eeprom+1
  2809  03C1  0870               	movf	??i1_read_eeprom,w
  2810  03C2  0023               	movlb	3	; select bank3
  2811  03C3  0091               	movwf	17	;volatile
  2812  03C4  0871               	movf	??i1_read_eeprom+1,w
  2813  03C5  0092               	movwf	18	;volatile
  2814                           
  2815                           ;eeprom.c: 12: EECON1bits.EEPGD = 0;
  2816  03C6  1395               	bcf	21,7	;volsfr
  2817                           
  2818                           ;eeprom.c: 15: EECON1bits.CFGS = 0;
  2819  03C7  1315               	bcf	21,6	;volsfr
  2820                           
  2821                           ;eeprom.c: 18: EECON1bits.RD = 1;
  2822  03C8  1415               	bsf	21,0	;volsfr
  2823                           
  2824                           ;eeprom.c: 21: return EEDATA;
  2825  03C9  0813               	movf	19,w	;volatile
  2826  03CA  0008               	return
  2827  03CB                     __end_ofi1_read_eeprom:	
  2828                           
  2829                           	psect	text12
  2830  033A                     __ptext12:	
  2831 ;; *************** function i1_init_I2C *****************
  2832 ;; Defined at:
  2833 ;;		line 18 in file "i2c.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;  addr            1    wreg     unsigned char 
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  addr            1    1[COMMON] unsigned char 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;		None               void
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2847 ;;      Params:         0       0       0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0       0
  2849 ;;      Temps:          1       0       0       0       0       0
  2850 ;;      Totals:         2       0       0       0       0       0
  2851 ;;Total ram usage:        2 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; This function calls:
  2854 ;;		Nothing
  2855 ;; This function is called by:
  2856 ;;		_I2C_ISR
  2857 ;; This function uses a non-reentrant model
  2858 ;;
  2859                           
  2860                           
  2861                           ;psect for function i1_init_I2C
  2862  033A                     i1_init_I2C:	
  2863                           
  2864                           ;incstack = 0
  2865                           ; Regs used in i1_init_I2C: [wreg+status,2+status,0]
  2866                           ;i1init_I2C@addr stored from wreg
  2867  033A  00F1               	movwf	i1init_I2C@addr
  2868                           
  2869                           ;i2c.c: 19: bypass_flag = 0;
  2870  033B  0020               	movlb	0	; select bank0
  2871  033C  01B4               	clrf	_bypass_flag	;volatile
  2872                           
  2873                           ;i2c.c: 21: panic_flag = 0;
  2874  033D  01B5               	clrf	_panic_flag	;volatile
  2875                           
  2876                           ;i2c.c: 24: PIE1bits.SSP1IE = 0;
  2877  033E  0021               	movlb	1	; select bank1
  2878  033F  1191               	bcf	17,3	;volatile
  2879                           
  2880                           ;i2c.c: 26: SSP1STATbits.CKE = 1;
  2881  0340  0024               	movlb	4	; select bank4
  2882  0341  1714               	bsf	20,6	;volatile
  2883                           
  2884                           ;i2c.c: 29: SSP1CON1bits.SSPEN = 1;
  2885  0342  1695               	bsf	21,5	;volatile
  2886                           
  2887                           ;i2c.c: 32: SSP1CON1bits.CKP = 1;
  2888  0343  1615               	bsf	21,4	;volatile
  2889                           
  2890                           ;i2c.c: 35: SSP1CON1bits.SSPM = 0b0110;
  2891  0344  0815               	movf	21,w	;volatile
  2892  0345  39F0               	andlw	-16
  2893  0346  3806               	iorlw	6
  2894  0347  0095               	movwf	21	;volatile
  2895                           
  2896                           ;i2c.c: 39: SSP1CON2bits.GCEN = 1;
  2897  0348  1796               	bsf	22,7	;volatile
  2898                           
  2899                           ;i2c.c: 42: SSP1CON2bits.SEN = 1;
  2900  0349  1416               	bsf	22,0	;volatile
  2901                           
  2902                           ;i2c.c: 45: SSP1MSK = 0xFF;
  2903  034A  30FF               	movlw	255
  2904  034B  0093               	movwf	19	;volatile
  2905                           
  2906                           ;i2c.c: 48: i2c_address = (addr << 1);
  2907  034C  3571               	lslf	i1init_I2C@addr,w
  2908  034D  00F0               	movwf	??i1_init_I2C
  2909  034E  0870               	movf	??i1_init_I2C,w
  2910  034F  0020               	movlb	0	; select bank0
  2911  0350  00CD               	movwf	_i2c_address	;volatile
  2912                           
  2913                           ;i2c.c: 51: SSP1ADD = (addr << 1);
  2914  0351  3571               	lslf	i1init_I2C@addr,w
  2915  0352  0024               	movlb	4	; select bank4
  2916  0353  0092               	movwf	18	;volatile
  2917                           
  2918                           ;i2c.c: 54: PIE1bits.SSP1IE = 1;
  2919  0354  0021               	movlb	1	; select bank1
  2920  0355  1591               	bsf	17,3	;volatile
  2921  0356  0008               	return
  2922  0357                     __end_ofi1_init_I2C:	
  2923                           
  2924                           	psect	text13
  2925  03CB                     __ptext13:	
  2926 ;; *************** function _i2c_write *****************
  2927 ;; Defined at:
  2928 ;;		line 247 in file "i2c.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  byte            1    wreg     unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  byte            1    0[COMMON] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;		None               void
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2942 ;;      Params:         0       0       0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0       0
  2944 ;;      Temps:          0       0       0       0       0       0
  2945 ;;      Totals:         1       0       0       0       0       0
  2946 ;;Total ram usage:        1 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_I2C_ISR
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _i2c_write
  2957  03CB                     _i2c_write:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _i2c_write: [wreg]
  2961                           ;i2c_write@byte stored from wreg
  2962  03CB  00F0               	movwf	i2c_write@byte
  2963  03CC                     i1l191:	
  2964                           ;i2c.c: 249: while(SSP1CON1bits.CKP) {}
  2965                           
  2966  03CC  0024               	movlb	4	; select bank4
  2967  03CD  1A15               	btfsc	21,4	;volatile
  2968  03CE  2BCC               	goto	i1l191
  2969                           
  2970                           ;i2c.c: 252: SSP1BUF = byte;
  2971  03CF  0870               	movf	i2c_write@byte,w
  2972  03D0  0091               	movwf	17	;volatile
  2973                           
  2974                           ;i2c.c: 255: SSP1CON1bits.CKP = 1;
  2975  03D1  1615               	bsf	21,4	;volatile
  2976  03D2  0008               	return
  2977  03D3                     __end_of_i2c_write:	
  2978                           
  2979                           	psect	text14
  2980  03AE                     __ptext14:	
  2981 ;; *************** function _i2c_read *****************
  2982 ;; Defined at:
  2983 ;;		line 258 in file "i2c.c"
  2984 ;; Parameters:    Size  Location     Type
  2985 ;;		None
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  byte            1    1[COMMON] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      unsigned char 
  2990 ;; Registers used:
  2991 ;;		wreg
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2997 ;;      Params:         0       0       0       0       0       0
  2998 ;;      Locals:         1       0       0       0       0       0
  2999 ;;      Temps:          1       0       0       0       0       0
  3000 ;;      Totals:         2       0       0       0       0       0
  3001 ;;Total ram usage:        2 bytes
  3002 ;; Hardware stack levels used:    1
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_I2C_ISR
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _i2c_read
  3012  03AE                     _i2c_read:	
  3013  03AE                     i1l197:	
  3014                           ;i2c.c: 260: while(!PIR1bits.SSP1IF) ;
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _i2c_read: [wreg]
  3018                           
  3019  03AE  0020               	movlb	0	; select bank0
  3020  03AF  1D91               	btfss	17,3	;volatile
  3021  03B0  2BAE               	goto	i1l197
  3022                           
  3023                           ;i2c.c: 262: PIR1bits.SSP1IF = 0;
  3024  03B1  1191               	bcf	17,3	;volatile
  3025  03B2                     i1l200:	
  3026                           ;i2c.c: 265: while(!SSP1STATbits.BF) ;
  3027                           
  3028  03B2  0024               	movlb	4	; select bank4
  3029  03B3  1C14               	btfss	20,0	;volatile
  3030  03B4  2BB2               	goto	i1l200
  3031                           
  3032                           ;i2c.c: 266: uint8_t byte = SSP1BUF;
  3033  03B5  0811               	movf	17,w	;volatile
  3034  03B6  00F0               	movwf	??_i2c_read
  3035  03B7  0870               	movf	??_i2c_read,w
  3036  03B8  00F1               	movwf	i2c_read@byte
  3037                           
  3038                           ;i2c.c: 269: SSP1STATbits.BF = 0;
  3039  03B9  1014               	bcf	20,0	;volatile
  3040                           
  3041                           ;i2c.c: 272: SSP1CON1bits.CKP = 1;
  3042  03BA  1615               	bsf	21,4	;volatile
  3043                           
  3044                           ;i2c.c: 275: return byte;
  3045  03BB  0871               	movf	i2c_read@byte,w
  3046  03BC  0008               	return
  3047  03BD                     __end_of_i2c_read:	
  3048                           
  3049                           	psect	text15
  3050  02CE                     __ptext15:	
  3051 ;; *************** function _ADC_ISR *****************
  3052 ;; Defined at:
  3053 ;;		line 46 in file "adc.c"
  3054 ;; Parameters:    Size  Location     Type
  3055 ;;		None
  3056 ;; Auto vars:     Size  Location     Type
  3057 ;;		None
  3058 ;; Return value:  Size  Location     Type
  3059 ;;		None               void
  3060 ;; Registers used:
  3061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3067 ;;      Params:         0       0       0       0       0       0
  3068 ;;      Locals:         0       0       0       0       0       0
  3069 ;;      Temps:          1       0       0       0       0       0
  3070 ;;      Totals:         1       0       0       0       0       0
  3071 ;;Total ram usage:        1 bytes
  3072 ;; Hardware stack levels used:    1
  3073 ;; This function calls:
  3074 ;;		Nothing
  3075 ;; This function is called by:
  3076 ;;		_ISR
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           
  3081                           ;psect for function _ADC_ISR
  3082  02CE                     _ADC_ISR:	
  3083                           
  3084                           ;adc.c: 47: switch(adc_chan) {
  3085                           
  3086                           ;incstack = 0
  3087                           ; Regs used in _ADC_ISR: [wreg-fsr0h+status,2+status,0]
  3088  02CE  2AEE               	goto	i1l1365
  3089  02CF                     i1l1351:	
  3090                           ;adc.c: 49: case 1:
  3091                           
  3092                           
  3093                           ;adc.c: 51: voltage = (ADRESH << 8) | (ADRESL);
  3094  02CF  0021               	movlb	1	; select bank1
  3095  02D0  081C               	movf	28,w	;volatile
  3096  02D1  0020               	movlb	0	; select bank0
  3097  02D2  00B3               	movwf	_voltage+1
  3098  02D3  0021               	movlb	1	; select bank1
  3099  02D4  081B               	movf	27,w	;volatile
  3100  02D5  0020               	movlb	0	; select bank0
  3101  02D6  00B2               	movwf	_voltage
  3102                           
  3103                           ;adc.c: 54: adc_chan = 2;
  3104  02D7  3002               	movlw	2
  3105  02D8  00F0               	movwf	??_ADC_ISR
  3106  02D9  0870               	movf	??_ADC_ISR,w
  3107  02DA  00FD               	movwf	_adc_chan
  3108                           
  3109                           ;adc.c: 55: ADCON0bits.CHS = 9;
  3110  02DB  0021               	movlb	1	; select bank1
  3111  02DC  081D               	movf	29,w	;volatile
  3112  02DD  3983               	andlw	-125
  3113  02DE  3824               	iorlw	36
  3114  02DF  009D               	movwf	29	;volatile
  3115                           
  3116                           ;adc.c: 58: ADCON0bits.GO = 1;
  3117  02E0  149D               	bsf	29,1	;volatile
  3118                           
  3119                           ;adc.c: 59: break;
  3120  02E1  2AF6               	goto	i1l108
  3121  02E2                     i1l1357:	
  3122                           ;adc.c: 62: case 2:
  3123                           
  3124                           
  3125                           ;adc.c: 65: temp = (ADRESH << 8) | ADRESL;
  3126  02E2  0021               	movlb	1	; select bank1
  3127  02E3  081C               	movf	28,w	;volatile
  3128  02E4  0020               	movlb	0	; select bank0
  3129  02E5  00B1               	movwf	_temp+1
  3130  02E6  0021               	movlb	1	; select bank1
  3131  02E7  081B               	movf	27,w	;volatile
  3132  02E8  0020               	movlb	0	; select bank0
  3133  02E9  00B0               	movwf	_temp
  3134                           
  3135                           ;adc.c: 67: adc_chan = 0;
  3136  02EA  01FD               	clrf	_adc_chan
  3137                           
  3138                           ;adc.c: 70: ADCON0bits.ADON = 0;
  3139  02EB  0021               	movlb	1	; select bank1
  3140  02EC  101D               	bcf	29,0	;volatile
  3141                           
  3142                           ;adc.c: 74: }
  3143                           
  3144                           ;adc.c: 72: break;
  3145  02ED  2AF6               	goto	i1l108
  3146  02EE                     i1l1365:	
  3147  02EE  087D               	movf	_adc_chan,w
  3148                           
  3149                           ; Switch size 1, requested type "space"
  3150                           ; Number of cases is 2, Range of values is 1 to 2
  3151                           ; switch strategies available:
  3152                           ; Name         Instructions Cycles
  3153                           ; simple_byte            7     4 (average)
  3154                           ; direct_byte           13     9 (fixed)
  3155                           ; jumptable            263     9 (fixed)
  3156                           ;	Chosen strategy is simple_byte
  3157  02EF  3A01               	xorlw	1	; case 1
  3158  02F0  1903               	skipnz
  3159  02F1  2ACF               	goto	i1l1351
  3160  02F2  3A03               	xorlw	3	; case 2
  3161  02F3  1903               	skipnz
  3162  02F4  2AE2               	goto	i1l1357
  3163  02F5  2AF6               	goto	i1l108
  3164  02F6                     i1l108:	
  3165                           
  3166                           ;adc.c: 77: PIR1bits.ADIF = 0;
  3167  02F6  0020               	movlb	0	; select bank0
  3168  02F7  1311               	bcf	17,6	;volatile
  3169  02F8  0008               	return
  3170  02F9                     __end_of_ADC_ISR:	
  3171  007E                     btemp	set	126	;btemp
  3172  007E                     int$flags	set	126
  3173  007E                     wtemp	set	126
  3174  007E                     wtemp0	set	126
  3175  0080                     wtemp1	set	128
  3176  0082                     wtemp2	set	130
  3177  0084                     wtemp3	set	132
  3178  0086                     wtemp4	set	134
  3179  0088                     wtemp5	set	136
  3180  007F                     wtemp6	set	127
  3181  007E                     ttemp	set	126
  3182  007E                     ttemp0	set	126
  3183  0081                     ttemp1	set	129
  3184  0084                     ttemp2	set	132
  3185  0087                     ttemp3	set	135
  3186  007F                     ttemp4	set	127
  3187  007E                     ltemp	set	126
  3188  007E                     ltemp0	set	126
  3189  0082                     ltemp1	set	130
  3190  0086                     ltemp2	set	134
  3191  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         24
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     22      46
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_I2C_ISR
    _I2C_ISR->i1_write_eeprom
    i1_write_eeprom->i1_read_eeprom

Critical Paths under _main in BANK0

    _main->_setup
    _setup->_write_eeprom
    _write_eeprom->_read_eeprom

Critical Paths under _ISR in BANK0

    _ISR->_I2C_ISR

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     816
                                             15 BANK0      7     7      0
                          _event_wdt
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                5     5      0     722
                                             10 BANK0      5     5      0
                           _init_ADC
                           _init_I2C
                           _init_WDT
                        _read_eeprom
                       _write_eeprom
 ---------------------------------------------------------------------------------
 (2) _write_eeprom                                         4     3      1     656
                                              6 BANK0      4     3      1
                        _read_eeprom
 ---------------------------------------------------------------------------------
 (3) _read_eeprom                                          3     3      0      22
                                              3 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _init_WDT                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_I2C                                             2     2      0      44
                                              3 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _event_wdt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  1     1      0     620
                                             12 COMMON     1     1      0
                            _ADC_ISR
                            _I2C_ISR
 ---------------------------------------------------------------------------------
 (5) _I2C_ISR                                              8     8      0     620
                                              7 COMMON     5     5      0
                                              0 BANK0      3     3      0
                           _i2c_read
                          _i2c_write
                         i1_init_I2C
                      i1_read_eeprom
                     i1_write_eeprom
 ---------------------------------------------------------------------------------
 (6) i1_write_eeprom                                       4     3      1     396
                                              3 COMMON     4     3      1
                      i1_read_eeprom
 ---------------------------------------------------------------------------------
 (7) i1_read_eeprom                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) i1_init_I2C                                           2     2      0      44
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (6) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _i2c_read                                             2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _ADC_ISR                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _event_wdt
   _setup
     _init_ADC
     _init_I2C
     _init_WDT
     _read_eeprom
     _write_eeprom
       _read_eeprom

 _ISR (ROOT)
   _ADC_ISR
   _I2C_ISR
     _i2c_read
     _i2c_write
     i1_init_I2C
     i1_read_eeprom
     i1_write_eeprom
       i1_read_eeprom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      3C       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     16      2E       6       57.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      3C      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Apr 25 20:48:08 2017

            __CFG_CP$OFF 0000                       l77 02C7                       l69 029D  
            __CFG_LVP$ON 0000                      l249 0315             __CFG_CPD$OFF 0000  
                    _ISR 0004                      u285 037A          __end_of_I2C_ISR 01DC  
        __end_of_ADC_ISR 02F9             __CFG_BORV$LO 0000                      wreg 0009  
           __CFG_IESO$ON 0000                     ?_ISR 0070               i1_init_I2C 033A  
                   l1223 0223                     l1217 0204                     l1227 0242  
                   l1415 02C0                     l1407 02A8                     l1409 02AF  
                   l1371 037E                     l1373 0382             __CFG_WDTE$ON 0000  
                   _LATA 010C                     _LATB 010D             __CFG_WRT$OFF 0000  
          __CFG_FCMEN$ON 0000                     _main 0296                     _temp 0030  
                   fsr0h 0005                     fsr0l 0004                     indf0 0000  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 001C                     ttemp 007E                     wtemp 007E  
          __CFG_MCLRE$ON 0000  __size_ofi1_write_eeprom 001C                    ??_ISR 007C  
                  ?_main 0070                    _EEADR 0191                    i1l200 03B2  
                  i1l108 02F6                    i1l191 03CC                    i1l249 036C  
                  i1l197 03AE                    _TRISA 008C                    _TRISB 008D  
           ?_read_eeprom 0070                    _setup 01DC                    _slope 002E  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 001E  
           __end_of_main 02CE         __end_of_i2c_read 03BD    __size_of_write_eeprom 0024  
              ??_I2C_ISR 0077                ??_ADC_ISR 0070                   ??_main 0046  
         __CFG_PLLEN$OFF 0000              ?i1_init_I2C 0070                   _ADRESH 009C  
                 _ADRESL 009B                   _EEDATA 0193                   _EECON2 0196  
                 ?_setup 0070                   _ANSELB 018D             i2c_read@byte 0071  
                 i1l1301 00D9                   i1l1311 0119                   i1l1313 0121  
                 i1l1315 013F                   i1l1317 0153                   i1l1341 01D3  
                 i1l1351 02CF                   i1l1327 0187                   i1l1271 004A  
                 i1l1343 01D5                   i1l1263 003C                   i1l1337 01BB  
                 i1l1273 004C                   i1l1265 003E                   i1l1339 01C4  
                 i1l1357 02E2                   i1l1365 02EE                   i1l1269 0045  
                 i1l1287 0091                   i1l1279 0062                   i1l1385 0010  
                 i1l1389 0015       __size_of_i2c_write 0008            main@panic_led 004C  
           _write_eeprom 02F9           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
       __end_of_init_I2C 033A         __end_of_init_ADC 03AE         __end_of_init_WDT 03DA  
                 _offset 002C                   _serial 0024              _i2c_address 004D  
__end_of__initialization 0026           i1_write_eeprom 0357           __pcstackCOMMON 0070  
 __size_ofi1_read_eeprom 000E      __size_ofi1_init_I2C 001D            __end_of_setup 0296  
           init_I2C@addr 003B        __end_of_i2c_write 03D3               I2C_ISR@cmd 0037  
   __size_of_read_eeprom 0011                  ??_setup 0041               __pbssBANK0 0020  
              ?_i2c_read 0070       __size_of_event_wdt 0019   __end_ofi1_write_eeprom 0373  
             __pmaintext 0296               __pintentry 0004                  _I2C_ISR 002A  
                _ADC_ISR 02CE           i1init_I2C@addr 0071                  _SSP1ADD 0212  
          i1_read_eeprom 03BD                  _SSP1BUF 0211                  _SSP1MSK 0213  
       write_eeprom@data 003D                ?_init_I2C 0070                ?_init_ADC 0070  
             ??_i2c_read 0070                ?_init_WDT 0070          ?i1_write_eeprom 0073  
             _panic_flag 0035                  __ptext1 01DC                  __ptext2 02F9  
                __ptext3 038C                  __ptext4 03D3                  __ptext5 031D  
                __ptext6 039D                  __ptext7 0373                  __ptext9 002A  
           __size_of_ISR 0018        __end_of_event_wdt 038C           ?i1_read_eeprom 0070  
           ??i1_init_I2C 0070                  clrloop0 03DB                  _voltage 0032  
   end_of_initialization 0026    i1write_eeprom@address 0076               ??_init_I2C 003A  
             ??_init_ADC 003A               ??_init_WDT 003A       __end_ofi1_init_I2C 0357  
       __CFG_FOSC$INTOSC 0000            i2c_write@byte 0070       i1write_eeprom@data 0073  
   i1read_eeprom@address 0072          ??i1_read_eeprom 0070      start_initialization 001E  
            __end_of_ISR 001C                _i2c_write 03CB        __size_of_i2c_read 000F  
               ?_I2C_ISR 0070                 ?_ADC_ISR 0070             _bypass_count 0028  
           _bypass_limit 002A              __pbssCOMMON 007D            ??_read_eeprom 003A  
              ___latbits 0001            __pcstackBANK0 0037               ?_i2c_write 0070  
       ??i1_write_eeprom 0074                __pnvBANK0 004D        __size_of_init_I2C 001D  
      __size_of_init_ADC 0011        __size_of_init_WDT 0007                _event_wdt 0373  
         __size_of_setup 00BA                _read_type 0036      __end_of_read_eeprom 039D  
               _LATAbits 010C                 _LATBbits 010D                clear_ram0 03DA  
               _PIE1bits 0091            ?_write_eeprom 003D                 _PIR1bits 0011  
       I2C_ISR@high_byte 0038         __size_of_I2C_ISR 01B2         __size_of_ADC_ISR 002B  
             _ADCON0bits 009D               _ADCON1bits 009E              ??_i2c_write 0070  
             ?_event_wdt 0070                 _i2c_read 03AE           ??_write_eeprom 003E  
             _EECON1bits 0195              _bypass_flag 0034                 _adc_chan 007D  
               _cal_data 0020       read_eeprom@address 003C                 _main$203 004A  
               _main$186 0048              _read_eeprom 038C                 __ptext10 0357  
               __ptext11 03BD                 __ptext12 033A                 __ptext13 03CB  
               __ptext14 03AE                 __ptext15 02CE             _SSP1CON1bits 0215  
           _SSP1CON2bits 0216                 _init_I2C 031D                 _init_ADC 039D  
               _init_WDT 03D3            __size_of_main 0038                 int$flags 007E  
           _SSP1STATbits 0214          I2C_ISR@low_byte 0039               _INTCONbits 000B  
             _FVRCONbits 0117    __end_ofi1_read_eeprom 03CB              ??_event_wdt 003A  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000     __end_of_write_eeprom 031D  
             _WDTCONbits 0097      write_eeprom@address 0040  
